# Enhanced Security Headers for Candlefish.ai React Application
# This configuration implements OWASP security best practices

[build]
  publish = "dist"
  command = "npm run build"

[build.environment]
  NODE_VERSION = "18"

# Redirect all HTTP to HTTPS
[[redirects]]
  from = "http://candlefish.ai/*"
  to = "https://candlefish.ai/:splat"
  status = 301
  force = true

[[redirects]]
  from = "http://www.candlefish.ai/*"
  to = "https://candlefish.ai/:splat"
  status = 301
  force = true

# Handle www subdomain
[[redirects]]
  from = "https://www.candlefish.ai/*"
  to = "https://candlefish.ai/:splat"
  status = 301
  force = true

# SPA routing - must come after other redirects
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# 404 handling
[[redirects]]
  from = "/*"
  to = "/404.html"
  status = 404

# Security Headers - Applied to all routes
[[headers]]
  for = "/*"
  [headers.values]
    # Prevent clickjacking attacks
    X-Frame-Options = "DENY"

    # Prevent MIME type sniffing
    X-Content-Type-Options = "nosniff"

    # Enable XSS filter (legacy browsers)
    X-XSS-Protection = "1; mode=block"

    # Control information sent with referrers
    Referrer-Policy = "strict-origin-when-cross-origin"

    # Feature Policy / Permissions Policy
    Permissions-Policy = '''
      camera=(),
      microphone=(),
      geolocation=(),
      payment=(),
      usb=(),
      magnetometer=(),
      gyroscope=(),
      accelerometer=()
    '''

    # Force HTTPS with HSTS
    Strict-Transport-Security = "max-age=31536000; includeSubDomains; preload"

    # Content Security Policy
    Content-Security-Policy = '''
      default-src 'self';
      script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com https://cdnjs.cloudflare.com;
      style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
      img-src 'self' data: blob: https:;
      font-src 'self' https://fonts.gstatic.com;
      connect-src 'self' https://api.candlefish.ai https://www.google-analytics.com https://vitals.vercel-insights.com wss://api.candlefish.ai;
      media-src 'self';
      object-src 'none';
      child-src 'self';
      frame-src 'none';
      frame-ancestors 'none';
      form-action 'self';
      base-uri 'self';
      worker-src 'self' blob:;
      manifest-src 'self';
      upgrade-insecure-requests;
    '''

    # Additional security headers
    X-DNS-Prefetch-Control = "on"
    X-Permitted-Cross-Domain-Policies = "none"
    Cross-Origin-Embedder-Policy = "require-corp"
    Cross-Origin-Opener-Policy = "same-origin"
    Cross-Origin-Resource-Policy = "same-origin"

# Cache static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/logo/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.woff"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Don't cache HTML files
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

[[headers]]
  for = "/index.html"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Pragma = "no-cache"
    Expires = "0"

# API endpoints (if any)
[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"
    Content-Type = "application/json"
    X-Content-Type-Options = "nosniff"

# Environment variables (DO NOT commit sensitive values)
[context.production.environment]
  REACT_APP_API_URL = "https://api.candlefish.ai"
  REACT_APP_GA_MEASUREMENT_ID = "G-XXXXXXXXXX"
  REACT_APP_ENVIRONMENT = "production"

[context.deploy-preview.environment]
  REACT_APP_API_URL = "https://staging-api.candlefish.ai"
  REACT_APP_ENVIRONMENT = "staging"

[context.branch-deploy.environment]
  REACT_APP_API_URL = "https://dev-api.candlefish.ai"
  REACT_APP_ENVIRONMENT = "development"

# Functions directory (if using Netlify Functions)
[functions]
  directory = "netlify/functions"

# Plugin for security headers validation
[[plugins]]
  package = "@netlify/plugin-lighthouse"
  [plugins.inputs]
    output_path = "reports/lighthouse.html"

# Form handling with spam protection
[forms]
  honeypot = "website"
