name: Family Letter Test Suite

on:
  push:
    paths:
      - 'public/docs/privileged/family/**'
  pull_request:
    paths:
      - 'public/docs/privileged/family/**'
  schedule:
    # Run security tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'public/docs/privileged/family/__tests__/package-lock.json'

      - name: Install dependencies
        run: |
          cd public/docs/privileged/family/__tests__
          npm ci

      - name: Run unit tests
        run: |
          cd public/docs/privileged/family/__tests__
          npm test -- --coverage --testPathPattern=unit

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          directory: public/docs/privileged/family/__tests__/coverage
          flags: unit-tests
          name: family-letter-unit-tests

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'public/docs/privileged/family/__tests__/package-lock.json'

      - name: Install dependencies
        run: |
          cd public/docs/privileged/family/__tests__
          npm ci

      - name: Run integration tests
        run: |
          cd public/docs/privileged/family/__tests__
          npm test -- --testPathPattern=integration

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'public/docs/privileged/family/__tests__/package-lock.json'

      - name: Install dependencies
        run: |
          cd public/docs/privileged/family/__tests__
          npm ci

      - name: Install Playwright browsers
        run: |
          cd public/docs/privileged/family/__tests__
          npx playwright install --with-deps

      - name: Run E2E tests
        run: |
          cd public/docs/privileged/family/__tests__
          npm run test:e2e

      - name: Upload E2E test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: e2e-test-results
          path: public/docs/privileged/family/__tests__/test-results/

      - name: Upload screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: e2e-screenshots
          path: public/docs/privileged/family/__tests__/test-results/

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'public/docs/privileged/family/__tests__/package-lock.json'

      - name: Install dependencies
        run: |
          cd public/docs/privileged/family/__tests__
          npm ci

      - name: Install Playwright browsers
        run: |
          cd public/docs/privileged/family/__tests__
          npx playwright install --with-deps

      - name: Run security tests
        run: |
          cd public/docs/privileged/family/__tests__
          npm run test:security

      - name: Run OWASP ZAP baseline scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: 'http://localhost:8080'
          docker_name: 'owasp/zap2docker-stable'

      - name: Upload security test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: security-test-results
          path: public/docs/privileged/family/__tests__/test-results/

  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'public/docs/privileged/family/__tests__/package-lock.json'

      - name: Install dependencies
        run: |
          cd public/docs/privileged/family/__tests__
          npm ci

      - name: Install Playwright browsers
        run: |
          cd public/docs/privileged/family/__tests__
          npx playwright install --with-deps

      - name: Run accessibility tests
        run: |
          cd public/docs/privileged/family/__tests__
          npm run test:accessibility

      - name: Upload accessibility test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: accessibility-test-results
          path: public/docs/privileged/family/__tests__/test-results/

  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'public/docs/privileged/family/__tests__/package-lock.json'

      - name: Install dependencies
        run: |
          cd public/docs/privileged/family/__tests__
          npm ci

      - name: Install Playwright browsers
        run: |
          cd public/docs/privileged/family/__tests__
          npx playwright install --with-deps

      - name: Run performance tests
        run: |
          cd public/docs/privileged/family/__tests__
          timeout 300 npm test -- --testPathPattern=performance

      - name: Run Lighthouse audit
        uses: treosh/lighthouse-ci-action@v9
        with:
          configPath: './public/docs/privileged/family/__tests__/lighthouse.config.js'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Upload performance test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: performance-test-results
          path: public/docs/privileged/family/__tests__/test-results/

  cross-browser-tests:
    name: Cross-Browser Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'public/docs/privileged/family/__tests__/package-lock.json'

      - name: Install dependencies
        run: |
          cd public/docs/privileged/family/__tests__
          npm ci

      - name: Install Playwright browsers
        run: |
          cd public/docs/privileged/family/__tests__
          npx playwright install --with-deps ${{ matrix.browser }}

      - name: Run tests on ${{ matrix.browser }}
        run: |
          cd public/docs/privileged/family/__tests__
          npx playwright test --project=${{ matrix.browser }}

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.browser }}
          path: public/docs/privileged/family/__tests__/test-results/

  mobile-tests:
    name: Mobile Device Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        device: ['iPhone 12', 'Pixel 5', 'iPad']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'public/docs/privileged/family/__tests__/package-lock.json'

      - name: Install dependencies
        run: |
          cd public/docs/privileged/family/__tests__
          npm ci

      - name: Install Playwright browsers
        run: |
          cd public/docs/privileged/family/__tests__
          npx playwright install --with-deps

      - name: Run tests on ${{ matrix.device }}
        run: |
          cd public/docs/privileged/family/__tests__
          npx playwright test --project="Mobile ${{ matrix.device }}"
        env:
          DEVICE_NAME: ${{ matrix.device }}

      - name: Upload mobile test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: mobile-test-results-${{ matrix.device }}
          path: public/docs/privileged/family/__tests__/test-results/

  test-report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, e2e-tests, security-tests, accessibility-tests, performance-tests]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all test artifacts
        uses: actions/download-artifact@v3

      - name: Generate comprehensive test report
        run: |
          cd public/docs/privileged/family/__tests__
          ./run-tests.sh --generate-report-only

      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: comprehensive-test-report
          path: public/docs/privileged/family/__tests__/test-results/test-summary.html

      - name: Comment test results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const reportPath = 'public/docs/privileged/family/__tests__/test-results/test-summary.html';
            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## Family Letter Test Results\n\nTest report has been generated. Download the comprehensive report from the artifacts section.\n\n⚠️ **Security Notice**: This implementation has known security vulnerabilities that need to be addressed before production use.`
              });
            }

  security-scan:
    name: Security Scan (Scheduled)
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run comprehensive security scan
        run: |
          cd public/docs/privileged/family/__tests__
          ./run-tests.sh --security-only

      - name: Create security issue if vulnerabilities found
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Security Vulnerabilities Detected in Family Letter Implementation',
              body: 'Automated security scan detected vulnerabilities in the family letter implementation. Please review the security test results and address the issues.',
              labels: ['security', 'bug', 'high-priority']
            });
