name: Build & Publish Design Tokens

on:
  push:
    branches: [main]
    paths:
      - 'packages/tokens/**'
      - 'packages/tailwind-preset/**'
      - '.github/workflows/build-and-publish.yml'
  workflow_dispatch:

jobs:
  build-tokens:
    name: Build Design Tokens
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build tokens
        run: npm run tokens:build

      - name: Upload tokens artifacts
        uses: actions/upload-artifact@v4
        with:
          name: design-tokens
          path: packages/tokens/build/

      - name: Commit build artifacts
        run: |
          git config user.name "Design System Bot"
          git config user.email "design-bot@candlefish.ai"
          git add packages/tokens/build
          git commit -m "chore: rebuild design tokens [skip ci]" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-packages:
    name: Publish NPM Packages
    runs-on: ubuntu-latest
    needs: build-tokens
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: npm run build

      - name: Check if tokens version changed
        id: tokens-version
        run: |
          PUBLISHED_VERSION=$(npm view @candlefish/tokens version 2>/dev/null || echo "0.0.0")
          LOCAL_VERSION=$(node -p "require('./packages/tokens/package.json').version")
          if [ "$PUBLISHED_VERSION" != "$LOCAL_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "New tokens version: $LOCAL_VERSION (published: $PUBLISHED_VERSION)"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Tokens version unchanged: $LOCAL_VERSION"
          fi

      - name: Check if preset version changed
        id: preset-version
        run: |
          PUBLISHED_VERSION=$(npm view @candlefish/tailwind-preset version 2>/dev/null || echo "0.0.0")
          LOCAL_VERSION=$(node -p "require('./packages/tailwind-preset/package.json').version")
          if [ "$PUBLISHED_VERSION" != "$LOCAL_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "New preset version: $LOCAL_VERSION (published: $PUBLISHED_VERSION)"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Preset version unchanged: $LOCAL_VERSION"
          fi

      - name: Publish @candlefish/tokens
        if: steps.tokens-version.outputs.changed == 'true'
        run: npm publish --workspace=@candlefish/tokens --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish @candlefish/tailwind-preset
        if: steps.preset-version.outputs.changed == 'true'
        run: npm publish --workspace=@candlefish/tailwind-preset --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.tokens-version.outputs.changed == 'true' || steps.preset-version.outputs.changed == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Design System v${{ github.run_number }}
          body: |
            ## 📦 Package Updates

            - @candlefish/tokens: ${{ steps.tokens-version.outputs.changed == 'true' && '✅ Updated' || 'No changes' }}
            - @candlefish/tailwind-preset: ${{ steps.preset-version.outputs.changed == 'true' && '✅ Updated' || 'No changes' }}

            ## 🎨 Design Tokens
            View the generated tokens in `packages/tokens/build/`

            ## 📝 Commit
            ${{ github.sha }}
          draft: false
          prerelease: false

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: publish-packages
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build documentation
        run: |
          echo "Building documentation site..."
          # Add documentation build command here when ready

      - name: Deploy to GitHub Pages
        if: false # Enable when docs site is ready
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs-build
