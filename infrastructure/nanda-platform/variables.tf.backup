variable "aws_region" {
  description = "AWS region for deployment"
  type        = string
  default     = "us-east-1"
}

variable "environment" {
  description = "Environment name (production, staging, development)"
  type        = string
  default     = "production"
}

variable "project_name" {
  description = "Project name for resource naming"
  type        = string
  default     = "nanda-index"
}

variable "domain_name" {
  description = "Domain name for the NANDA platform"
  type        = string
  default     = "nanda.candlefish.ai"
}

# VPC Configuration
variable "vpc_cidr" {
  description = "CIDR block for VPC"
  type        = string
  default     = "10.0.0.0/16"
}

variable "public_subnet_cidrs" {
  description = "CIDR blocks for public subnets"
  type        = list(string)
  default     = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
}

variable "private_subnet_cidrs" {
  description = "CIDR blocks for private subnets"
  type        = list(string)
  default     = ["10.0.10.0/24", "10.0.11.0/24", "10.0.12.0/24"]
}

# Redis Configuration
variable "redis_instance_type" {
  description = "ElastiCache Redis instance type"
  type        = string
  default     = "cache.r6g.large"
}

variable "redis_num_nodes" {
  description = "Number of Redis cache nodes"
  type        = number
  default     = 3
}

variable "redis_auth_token" {
  description = "Redis AUTH token"
  type        = string
  sensitive   = true
}

# ECS Configuration
variable "ecs_min_capacity" {
  description = "Minimum number of ECS tasks"
  type        = number
  default     = 2
}

variable "ecs_max_capacity" {
  description = "Maximum number of ECS tasks"
  type        = number
  default     = 20
}

variable "ecs_desired_capacity" {
  description = "Desired number of ECS tasks"
  type        = number
  default     = 3
}

# Application Configuration
variable "api_image_tag" {
  description = "Docker image tag for NANDA API"
  type        = string
  default     = "latest"
}

variable "dashboard_image_tag" {
  description = "Docker image tag for NANDA Dashboard"
  type        = string
  default     = "latest"
}

variable "cpu_units" {
  description = "CPU units for ECS tasks"
  type        = number
  default     = 512
}

variable "memory" {
  description = "Memory in MiB for ECS tasks"
  type        = number
  default     = 1024
}

# Monitoring Configuration
variable "enable_detailed_monitoring" {
  description = "Enable detailed CloudWatch monitoring"
  type        = bool
  default     = true
}

variable "log_retention_days" {
  description = "CloudWatch log retention in days"
  type        = number
  default     = 30
}

# Security Configuration
variable "enable_waf" {
  description = "Enable AWS WAF for additional security"
  type        = bool
  default     = true
}

variable "enable_shield" {
  description = "Enable AWS Shield Advanced"
  type        = bool
  default     = false
}

# Backup Configuration
variable "backup_retention_days" {
  description = "Backup retention period in days"
  type        = number
  default     = 30
}

variable "enable_point_in_time_recovery" {
  description = "Enable point-in-time recovery for DynamoDB"
  type        = bool
  default     = true
}

# Enterprise Integration
variable "enterprise_registries" {
  description = "List of enterprise agent registries to federate with"
  type        = list(string)
  default     = [
    "https://registry.openai.com",
    "https://registry.anthropic.com",
    "https://registry.microsoft.com/copilot",
    "https://registry.google.com/ai"
  ]
}

variable "trusted_registries" {
  description = "List of trusted agent registries for cross-signing"
  type        = list(string)
  default     = [
    "https://registry.openai.com",
    "https://registry.anthropic.com"
  ]
}

# Performance Configuration
variable "enable_http2" {
  description = "Enable HTTP/2 support"
  type        = bool
  default     = true
}

variable "enable_compression" {
  description = "Enable response compression"
  type        = bool
  default     = true
}

variable "cache_ttl_seconds" {
  description = "Default cache TTL in seconds"
  type        = number
  default     = 300
}

# Privacy and Security
variable "enable_privacy_layer" {
  description = "Enable privacy layer with mix networks"
  type        = bool
  default     = true
}

variable "mix_nodes" {
  description = "List of mix network nodes for privacy"
  type        = list(string)
  default     = [
    "mix1.nanda.candlefish.ai",
    "mix2.nanda.candlefish.ai",
    "mix3.nanda.candlefish.ai"
  ]
}

variable "zk_prime" {
  description = "Prime number for zero-knowledge proofs"
  type        = string
  default     = "2^521 - 1"
}

# Feature Flags
variable "enable_agent_facts_resolver" {
  description = "Enable agent facts resolution"
  type        = bool
  default     = true
}

variable "enable_adaptive_resolver" {
  description = "Enable adaptive resolution strategies"
  type        = bool
  default     = true
}

variable "enable_enterprise_connector" {
  description = "Enable enterprise registry federation"
  type        = bool
  default     = true
}

variable "enable_real_time_subscriptions" {
  description = "Enable GraphQL real-time subscriptions"
  type        = bool
  default     = true
}

variable "enable_load_balancing" {
  description = "Enable load balancing strategies"
  type        = bool
  default     = true
}

variable "enable_geographic_routing" {
  description = "Enable geographic routing"
  type        = bool
  default     = true
}

variable "enable_canary_deployments" {
  description = "Enable canary deployment strategy"
  type        = bool
  default     = false
}

# Development and Testing
variable "enable_debug_mode" {
  description = "Enable debug logging and features"
  type        = bool
  default     = false
}

variable "enable_performance_profiling" {
  description = "Enable performance profiling"
  type        = bool
  default     = true
}

variable "enable_chaos_engineering" {
  description = "Enable chaos engineering experiments"
  type        = bool
  default     = false
}

# Data Seeding
variable "seed_sample_agents" {
  description = "Seed the database with sample agents"
  type        = bool
  default     = true
}

variable "sample_agents_count" {
  description = "Number of sample agents to seed"
  type        = number
  default     = 1000
}
