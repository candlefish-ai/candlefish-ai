# Kong API Gateway Configuration for Inventory Management System
_format_version: "3.0"
_transform: true

services:
  # Backend API Service
  - name: inventory-backend
    url: http://inventory-backend-active.inventory-production.svc.cluster.local
    protocol: http
    host: inventory-backend-active.inventory-production.svc.cluster.local
    port: 80
    path: /
    retries: 3
    connect_timeout: 30000
    write_timeout: 30000
    read_timeout: 30000

  # Frontend Service
  - name: inventory-frontend
    url: http://inventory-frontend-active.inventory-production.svc.cluster.local
    protocol: http
    host: inventory-frontend-active.inventory-production.svc.cluster.local
    port: 80
    path: /
    retries: 3
    connect_timeout: 30000
    write_timeout: 30000
    read_timeout: 30000

  # WebSocket Service (for real-time features)
  - name: inventory-websocket
    url: http://inventory-backend-active.inventory-production.svc.cluster.local
    protocol: http
    host: inventory-backend-active.inventory-production.svc.cluster.local
    port: 80
    path: /ws
    retries: 1
    connect_timeout: 30000
    write_timeout: 86400000  # 24 hours for WebSocket connections
    read_timeout: 86400000

routes:
  # API Routes
  - name: inventory-api
    service: inventory-backend
    protocols:
      - https
      - http
    hosts:
      - api.inventory.candlefish.ai
    paths:
      - /api
    strip_path: false
    preserve_host: true
    request_buffering: true
    response_buffering: true

  # Frontend Routes
  - name: inventory-frontend
    service: inventory-frontend
    protocols:
      - https
      - http
    hosts:
      - inventory.candlefish.ai
      - app.inventory.candlefish.ai
    paths:
      - /
    strip_path: false
    preserve_host: true
    request_buffering: true
    response_buffering: true

  # WebSocket Routes
  - name: inventory-websocket
    service: inventory-websocket
    protocols:
      - https
      - http
    hosts:
      - api.inventory.candlefish.ai
    paths:
      - /ws
    strip_path: false
    preserve_host: true
    request_buffering: false
    response_buffering: false

plugins:
  # Global Rate Limiting
  - name: rate-limiting
    config:
      minute: 100
      hour: 1000
      day: 10000
      policy: cluster
      hide_client_headers: false
      fault_tolerant: true
      redis_host: redis-service.inventory-production.svc.cluster.local
      redis_port: 6379
      redis_database: 1

  # Global CORS
  - name: cors
    config:
      origins:
        - "https://inventory.candlefish.ai"
        - "https://app.inventory.candlefish.ai"
        - "https://app.candlefish.ai"
      methods:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
        - OPTIONS
      headers:
        - Accept
        - Accept-Version
        - Content-Length
        - Content-MD5
        - Content-Type
        - Date
        - X-Auth-Token
        - Authorization
        - X-Requested-With
      exposed_headers:
        - X-Auth-Token
      credentials: true
      max_age: 3600
      preflight_continue: false

  # Security Headers
  - name: response-transformer
    config:
      add:
        headers:
          - "X-Frame-Options:SAMEORIGIN"
          - "X-Content-Type-Options:nosniff"
          - "X-XSS-Protection:1; mode=block"
          - "Referrer-Policy:strict-origin-when-cross-origin"
          - "Content-Security-Policy:default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' wss: https:"

  # Request/Response Logging
  - name: file-log
    config:
      path: /var/log/kong/access.log
      format: '{"timestamp":"$time_iso8601","client_ip":"$remote_addr","method":"$request_method","uri":"$request_uri","status":$status,"response_time":$request_time,"bytes_sent":$bytes_sent,"user_agent":"$http_user_agent","upstream_addr":"$upstream_addr"}'

  # Prometheus Metrics
  - name: prometheus
    config:
      per_consumer: true
      status_code_metrics: true
      latency_metrics: true
      bandwidth_metrics: true
      upstream_health_metrics: true

# Route-specific plugins
  # API Authentication (JWT)
  - name: jwt
    route: inventory-api
    config:
      uri_param_names:
        - jwt
      cookie_names:
        - jwt
      header_names:
        - authorization
      key_claim_name: kid
      secret_is_base64: false
      run_on_preflight: true
      maximum_expiration: 86400  # 24 hours

  # API Rate Limiting (stricter for API)
  - name: rate-limiting
    route: inventory-api
    config:
      minute: 200
      hour: 2000
      day: 20000
      policy: cluster
      hide_client_headers: false
      fault_tolerant: true
      redis_host: redis-service.inventory-production.svc.cluster.local
      redis_port: 6379
      redis_database: 1

  # Request Size Limiting (for file uploads)
  - name: request-size-limiting
    route: inventory-api
    config:
      allowed_payload_size: 50  # 50MB for photo uploads

  # Response Caching for Static Assets
  - name: proxy-cache
    route: inventory-frontend
    config:
      response_code:
        - 200
        - 301
        - 302
      request_method:
        - GET
        - HEAD
      content_type:
        - text/plain
        - application/json
        - text/css
        - application/javascript
        - image/png
        - image/jpeg
        - image/gif
        - image/svg+xml
        - font/woff
        - font/woff2
      cache_ttl: 3600  # 1 hour
      strategy: memory

  # WebSocket specific configuration
  - name: request-transformer
    route: inventory-websocket
    config:
      add:
        headers:
          - "Upgrade:websocket"
          - "Connection:upgrade"

  # Health Check Plugin
  - name: request-termination
    route: inventory-frontend
    config:
      status_code: 200
      content_type: "text/plain"
      body: "healthy"
    enabled: false  # Only enable for health check paths

consumers:
  # Service Account for Internal Communication
  - username: inventory-service
    custom_id: inventory-service-internal

  # Mobile App Consumer
  - username: inventory-mobile-app
    custom_id: inventory-mobile-app-v1

# JWT Credentials for Consumers
jwt_secrets:
  - consumer: inventory-service
    key: inventory-service-key
    secret: "${KONG_JWT_SECRET_INTERNAL}"
    algorithm: HS256

  - consumer: inventory-mobile-app
    key: inventory-mobile-key
    secret: "${KONG_JWT_SECRET_MOBILE}"
    algorithm: HS256

# ACL Groups (Access Control Lists)
acls:
  - consumer: inventory-service
    group: internal-services

  - consumer: inventory-mobile-app
    group: mobile-clients

# Additional Security Plugins
  # IP Restriction (if needed)
  # - name: ip-restriction
  #   config:
  #     allow:
  #       - "10.0.0.0/8"
  #       - "172.16.0.0/12"
  #       - "192.168.0.0/16"

  # Bot Detection
  - name: bot-detection
    config:
      whitelist:
        - googlebot
        - bingbot
        - slurp
      blacklist:
        - "python-requests"
        - "curl"
        - "wget"

# Circuit Breaker Configuration
upstreams:
  - name: inventory-backend-upstream
    algorithm: round-robin
    hash_on: none
    hash_fallback: none
    healthchecks:
      active:
        http_path: /health
        healthy:
          interval: 5
          successes: 3
        unhealthy:
          interval: 5
          http_failures: 3
          timeouts: 3
      passive:
        healthy:
          successes: 3
        unhealthy:
          http_failures: 3
          timeouts: 3
    targets:
      - target: inventory-backend-active.inventory-production.svc.cluster.local:80
        weight: 100

  - name: inventory-frontend-upstream
    algorithm: round-robin
    hash_on: none
    hash_fallback: none
    healthchecks:
      active:
        http_path: /health
        healthy:
          interval: 5
          successes: 3
        unhealthy:
          interval: 5
          http_failures: 3
          timeouts: 3
      passive:
        healthy:
          successes: 3
        unhealthy:
          http_failures: 3
          timeouts: 3
    targets:
      - target: inventory-frontend-active.inventory-production.svc.cluster.local:80
        weight: 100
