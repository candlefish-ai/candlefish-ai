# PostgreSQL Database for Candlefish AI Collaboration System
app = "candlefish-postgres"
primary_region = "sjc"

[build]
  image = "postgres:15-alpine"

[env]
  POSTGRES_USER = "candlefish"
  POSTGRES_DB = "candlefish_collaboration"
  # POSTGRES_PASSWORD will be set via secrets
  PGDATA = "/var/lib/postgresql/data/pgdata"
  POSTGRES_INITDB_ARGS = "--encoding=UTF-8 --locale=C"

# PostgreSQL service configuration
[http_service]
  internal_port = 5432
  protocol = "tcp"
  auto_stop_machines = false
  auto_start_machines = true
  min_machines_running = 1

  [[http_service.checks]]
    interval = "10s"
    timeout = "5s"
    method = "get"
    path = "/health"
    protocol = "http"

[processes]
  app = "postgres"

# Volume configuration for persistent data
[[mounts]]
  source = "postgres_data"
  destination = "/var/lib/postgresql/data"
  initial_size = "10gb"
  snapshot_retention = 7

# VM configuration for production workload
[[vm]]
  memory = '1gb'
  cpu_kind = 'shared'
  cpus = 1

# Backup configuration
[backup]
  interval = "24h"
  retention = "7d"

# Monitoring and health checks
[[services]]
  internal_port = 5432
  protocol = "tcp"

  [[services.ports]]
    port = 5432
    handlers = ["pg_tls"]

  [[services.tcp_checks]]
    interval = "15s"
    timeout = "10s"

# Connection pooling via PgBouncer
[[services]]
  internal_port = 6432
  protocol = "tcp"

  [[services.ports]]
    port = 6432
    handlers = ["pg_tls"]

  [[services.tcp_checks]]
    interval = "15s"
    timeout = "10s"

# Environment-specific configurations
[env.production]
  POSTGRES_SHARED_PRELOAD_LIBRARIES = "pg_stat_statements,auto_explain"
  POSTGRES_MAX_CONNECTIONS = "100"
  POSTGRES_SHARED_BUFFERS = "256MB"
  POSTGRES_EFFECTIVE_CACHE_SIZE = "512MB"
  POSTGRES_WORK_MEM = "4MB"
  POSTGRES_MAINTENANCE_WORK_MEM = "64MB"
  POSTGRES_WAL_BUFFERS = "16MB"
  POSTGRES_CHECKPOINT_COMPLETION_TARGET = "0.9"
  POSTGRES_RANDOM_PAGE_COST = "1.1"
  POSTGRES_LOG_STATEMENT = "all"
  POSTGRES_LOG_MIN_DURATION_STATEMENT = "1000"
