# Elasticsearch StatefulSet for RTPM Logging
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
spec:
  serviceName: elasticsearch-headless
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: elasticsearch
      app.kubernetes.io/component: logging
  template:
    metadata:
      labels:
        app.kubernetes.io/name: elasticsearch
        app.kubernetes.io/component: logging
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      initContainers:
      - name: increase-vm-max-map
        image: busybox:1.35
        command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        securityContext:
          privileged: true
      - name: increase-fd-ulimit
        image: busybox:1.35
        command: ['sh', '-c', 'ulimit -n 65536']
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: cluster.name
          value: "rtpm-logs"
        - name: discovery.seed_hosts
          value: "elasticsearch-headless"
        - name: cluster.initial_master_nodes
          value: "elasticsearch-0,elasticsearch-1,elasticsearch-2"
        - name: ES_JAVA_OPTS
          value: "-Xms2g -Xmx2g"
        - name: xpack.security.enabled
          value: "true"
        - name: xpack.security.transport.ssl.enabled
          value: "true"
        - name: xpack.security.transport.ssl.verification_mode
          value: "certificate"
        - name: xpack.security.transport.ssl.keystore.path
          value: "/usr/share/elasticsearch/config/elastic-certificates.p12"
        - name: xpack.security.transport.ssl.truststore.path
          value: "/usr/share/elasticsearch/config/elastic-certificates.p12"
        - name: xpack.security.http.ssl.enabled
          value: "true"
        - name: xpack.security.http.ssl.keystore.path
          value: "/usr/share/elasticsearch/config/elastic-certificates.p12"
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-credentials
              key: password
        resources:
          requests:
            cpu: 500m
            memory: 2Gi
          limits:
            cpu: 2
            memory: 4Gi
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        - name: elasticsearch-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        - name: elasticsearch-certs
          mountPath: /usr/share/elasticsearch/config/elastic-certificates.p12
          subPath: elastic-certificates.p12
          readOnly: true
        livenessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
            scheme: HTTPS
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /_cluster/health?wait_for_status=yellow
            port: 9200
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: elasticsearch-config
        configMap:
          name: elasticsearch-config
      - name: elasticsearch-certs
        secret:
          secretName: elasticsearch-certs
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: rtpm-ssd
      resources:
        requests:
          storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
spec:
  type: ClusterIP
  ports:
  - port: 9200
    targetPort: 9200
    name: http
  - port: 9300
    targetPort: 9300
    name: transport
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-headless
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
spec:
  clusterIP: None
  ports:
  - port: 9200
    targetPort: 9200
    name: http
  - port: 9300
    targetPort: 9300
    name: transport
  selector:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-config
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
data:
  elasticsearch.yml: |
    cluster.name: "rtpm-logs"
    network.host: 0.0.0.0

    # Discovery
    discovery.zen.ping.unicast.hosts: ["elasticsearch-headless"]
    discovery.zen.minimum_master_nodes: 2

    # Security
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.keystore.path: elastic-certificates.p12
    xpack.security.transport.ssl.truststore.path: elastic-certificates.p12
    xpack.security.http.ssl.enabled: true
    xpack.security.http.ssl.keystore.path: elastic-certificates.p12

    # Index management
    action.destructive_requires_name: true
    cluster.routing.allocation.disk.threshold.enabled: true
    cluster.routing.allocation.disk.watermark.low: 85%
    cluster.routing.allocation.disk.watermark.high: 90%
    cluster.routing.allocation.disk.watermark.flood_stage: 95%

    # Performance
    indices.memory.index_buffer_size: 10%
    indices.queries.cache.size: 20%
    indices.fielddata.cache.size: 40%

    # Logging
    logger.level: INFO
    logger.org.elasticsearch.discovery: WARN
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-credentials
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
type: Opaque
data:
  username: ZWxhc3RpYw==  # elastic
  password: Y2hhbmdlLW1lLWluLXByb2R1Y3Rpb24=  # change-me-in-production
---
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-certs
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: elasticsearch
    app.kubernetes.io/component: logging
type: Opaque
data:
  elastic-certificates.p12: ""  # Should be generated and base64 encoded
