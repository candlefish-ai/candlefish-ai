apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtpm-celery-worker
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: worker
    app.kubernetes.io/instance: celery-worker
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rtpm
      app.kubernetes.io/component: worker
      app.kubernetes.io/instance: celery-worker
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rtpm
        app.kubernetes.io/component: worker
        app.kubernetes.io/instance: celery-worker
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9540"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      imagePullSecrets:
      - name: rtpm-registry
      containers:
      - name: worker
        image: rtpm-api:latest
        imagePullPolicy: Always
        command: ["celery"]
        args:
        - "worker"
        - "-A"
        - "src.workers.aggregation.celery_app"
        - "--loglevel=info"
        - "--concurrency=4"
        - "--prefetch-multiplier=1"
        - "--max-tasks-per-child=1000"
        - "--optimization=fair"
        env:
        # Inherit environment from API deployment
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: LOG_LEVEL
        
        # Database configuration
        - name: DATABASE_URL
          value: "postgresql+asyncpg://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rtpm-secrets
              key: DATABASE_PASSWORD
        
        # Redis/Celery configuration
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rtpm-secrets
              key: REDIS_PASSWORD
        - name: CELERY_BROKER_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/$(CELERY_BROKER_DB)"
        - name: CELERY_RESULT_BACKEND
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/$(CELERY_RESULT_DB)"
        - name: CELERY_BROKER_DB
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: CELERY_BROKER_DB
        - name: CELERY_RESULT_DB
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: CELERY_RESULT_DB
        
        # Secrets
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: rtpm-secrets
              key: SECRET_KEY
        
        resources:
          requests:
            cpu: 300m
            memory: 256Mi
          limits:
            cpu: 800m
            memory: 512Mi
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "celery -A src.workers.aggregation.celery_app inspect ping -d celery@$HOSTNAME"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "celery -A src.workers.aggregation.celery_app inspect ping -d celery@$HOSTNAME"
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 60
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rtpm-celery-worker-hpa
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: worker-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rtpm-celery-worker
  minReplicas: 4
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 25
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtpm-celery-beat
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: scheduler
    app.kubernetes.io/instance: celery-beat
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: rtpm
      app.kubernetes.io/component: scheduler
      app.kubernetes.io/instance: celery-beat
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rtpm
        app.kubernetes.io/component: scheduler
        app.kubernetes.io/instance: celery-beat
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      imagePullSecrets:
      - name: rtpm-registry
      containers:
      - name: beat
        image: rtpm-api:latest
        imagePullPolicy: Always
        command: ["celery"]
        args:
        - "beat"
        - "-A"
        - "src.workers.aggregation.celery_app"
        - "--loglevel=info"
        - "--schedule=/app/tmp/celerybeat-schedule"
        env:
        # Same environment as workers
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: LOG_LEVEL
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rtpm-secrets
              key: REDIS_PASSWORD
        - name: CELERY_BROKER_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/$(CELERY_BROKER_DB)"
        - name: CELERY_RESULT_BACKEND
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/$(CELERY_RESULT_DB)"
        - name: CELERY_BROKER_DB
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: CELERY_BROKER_DB
        - name: CELERY_RESULT_DB
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: CELERY_RESULT_DB
        
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
        - name: beat-schedule
          mountPath: /app/tmp
        - name: logs
          mountPath: /app/logs
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "ps aux | grep 'celery beat' | grep -v grep"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: beat-schedule
        emptyDir: {}
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc
      terminationGracePeriodSeconds: 30