apiVersion: v1
kind: Secret
metadata:
  name: rtpm-secrets
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # These should be base64 encoded values
  # Use: echo -n "your-secret" | base64
  
  # Database credentials
  DATABASE_PASSWORD: cGxlYXNlLWNoYW5nZS1pbi1wcm9kdWN0aW9u  # please-change-in-production
  
  # Redis credentials
  REDIS_PASSWORD: cGxlYXNlLWNoYW5nZS1pbi1wcm9kdWN0aW9u  # please-change-in-production
  
  # Application secrets
  SECRET_KEY: c3VwZXItc2VjcmV0LWtleS1jaGFuZ2UtaW4tcHJvZHVjdGlvbg==  # super-secret-key-change-in-production
  JWT_SECRET_KEY: and0LXNlY3JldC1rZXktY2hhbmdlLWluLXByb2R1Y3Rpb24=  # jwt-secret-key-change-in-production
  
  # Flower monitoring credentials
  FLOWER_BASIC_AUTH: YWRtaW46cGFzc3dvcmQ=  # admin:password
  
  # External service credentials (if needed)
  AWS_ACCESS_KEY_ID: ""
  AWS_SECRET_ACCESS_KEY: ""
  
---
apiVersion: v1
kind: Secret
metadata:
  name: rtpm-tls
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  # TLS certificate and key will be provided by cert-manager
  tls.crt: ""
  tls.key: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: rtpm-registry
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtmp
    app.kubernetes.io/component: registry
type: kubernetes.io/dockerconfigjson
data:
  # Docker registry credentials for private images
  # Generated with: kubectl create secret docker-registry rtpm-registry --docker-server=<server> --docker-username=<username> --docker-password=<password> --docker-email=<email> --dry-run=client -o yaml
  .dockerconfigjson: eyJhdXRocyI6e319  # Empty for now, should be configured in production