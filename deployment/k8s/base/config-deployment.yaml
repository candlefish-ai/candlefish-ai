apiVersion: apps/v1
kind: Deployment
metadata:
  name: netlify-config
  labels:
    app.kubernetes.io/name: netlify-extension
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: netlify-extension
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: netlify-extension
      app.kubernetes.io/component: config
  template:
    metadata:
      labels:
        app.kubernetes.io/name: netlify-extension
        app.kubernetes.io/component: config
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8003"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: netlify-extension
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        fsGroup: 1001
      containers:
        - name: config
          image: ghcr.io/candlefish-enterprise/netlify-extension-config:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8003
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "8003"
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: netlify-extension-config
                  key: LOG_LEVEL
            - name: CONFIG_BACKUP_INTERVAL
              value: "3600000"
            - name: SCHEMA_VALIDATION
              value: "strict"
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: netlify-extension-secrets
                  key: GITHUB_TOKEN
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: configs
              mountPath: /app/configs
            - name: backups
              mountPath: /app/backups
      volumes:
        - name: tmp
          emptyDir: {}
        - name: configs
          emptyDir: {}
        - name: backups
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - config
                topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: netlify-config-service
  labels:
    app.kubernetes.io/name: netlify-extension
    app.kubernetes.io/component: config
spec:
  type: ClusterIP
  ports:
    - port: 8003
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: netlify-extension
    app.kubernetes.io/component: config
