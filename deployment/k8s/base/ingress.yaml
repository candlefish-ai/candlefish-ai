apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: netlify-extension-ingress
  labels:
    app.kubernetes.io/name: netlify-extension
    app.kubernetes.io/component: ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "DENY" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
spec:
  tls:
    - hosts:
        - netlify-extension.candlefish.ai
      secretName: netlify-extension-tls
  rules:
    - host: netlify-extension.candlefish.ai
      http:
        paths:
          # Frontend routes
          - path: /
            pathType: Prefix
            backend:
              service:
                name: netlify-frontend-service
                port:
                  number: 80

          # API routes
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: netlify-api-service
                port:
                  number: 3001

          # ML service routes
          - path: /ml
            pathType: Prefix
            backend:
              service:
                name: netlify-ml-service
                port:
                  number: 8001

          # Monitoring routes
          - path: /monitor
            pathType: Prefix
            backend:
              service:
                name: netlify-monitor-service
                port:
                  number: 8002

          # Configuration routes
          - path: /config
            pathType: Prefix
            backend:
              service:
                name: netlify-config-service
                port:
                  number: 8003
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: netlify-extension-network-policy
  labels:
    app.kubernetes.io/name: netlify-extension
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: netlify-extension
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow traffic from nginx ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 3001
        - protocol: TCP
          port: 8001
        - protocol: TCP
          port: 8002
        - protocol: TCP
          port: 8003

    # Allow inter-service communication
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: netlify-extension
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 3001
        - protocol: TCP
          port: 8001
        - protocol: TCP
          port: 8002
        - protocol: TCP
          port: 8003

    # Allow monitoring scraping
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 80
        - protocol: TCP
          port: 3001
        - protocol: TCP
          port: 8001
        - protocol: TCP
          port: 8002
        - protocol: TCP
          port: 8003

  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53

    # Allow HTTPS outbound for external APIs
    - to: []
      ports:
        - protocol: TCP
          port: 443

    # Allow database connections
    - to:
        - podSelector:
            matchLabels:
              app: postgres
      ports:
        - protocol: TCP
          port: 5432

    # Allow Redis connections
    - to:
        - podSelector:
            matchLabels:
              app: redis
      ports:
        - protocol: TCP
          port: 6379
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: netlify-extension
  labels:
    app.kubernetes.io/name: netlify-extension
    app.kubernetes.io/component: security
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: netlify-extension-role
  labels:
    app.kubernetes.io/name: netlify-extension
    app.kubernetes.io/component: security
rules:
  - apiGroups: [""]
    resources: ["configmaps", "secrets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: netlify-extension-rolebinding
  labels:
    app.kubernetes.io/name: netlify-extension
    app.kubernetes.io/component: security
subjects:
  - kind: ServiceAccount
    name: netlify-extension
    namespace: netlify-extension
roleRef:
  kind: Role
  name: netlify-extension-role
  apiGroup: rbac.authorization.k8s.io
