apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: inventory-backend-rollout
  namespace: inventory-production
  labels:
    app: inventory-backend
  annotations:
    linkerd.io/inject: enabled
spec:
  replicas: 3
  strategy:
    blueGreen:
      activeService: inventory-backend-active
      previewService: inventory-backend-preview
      autoPromotionEnabled: false
      scaleDownDelaySeconds: 30
      prePromotionAnalysis:
        templates:
        - templateName: success-rate
        args:
        - name: service-name
          value: inventory-backend-preview
      postPromotionAnalysis:
        templates:
        - templateName: success-rate
        args:
        - name: service-name
          value: inventory-backend-active
      previewReplicaCount: 2
      revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: inventory-backend
  template:
    metadata:
      labels:
        app: inventory-backend
        version: "IMAGE_TAG"
      annotations:
        linkerd.io/inject: enabled
        config.linkerd.io/proxy-cpu-request: "100m"
        config.linkerd.io/proxy-memory-request: "20Mi"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: inventory-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        fsGroup: 65534
      containers:
      - name: inventory-backend
        image: ghcr.io/candlefish-ai/candlefish-ai/inventory-backend:IMAGE_TAG
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        env:
        - name: GO_ENV
          valueFrom:
            configMapKeyRef:
              name: inventory-config
              key: GO_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: inventory-config
              key: PORT
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: inventory-db-secret
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: inventory-redis-secret
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: inventory-jwt-secret
              key: JWT_SECRET
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: inventory-s3-secret
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: inventory-s3-secret
              key: AWS_SECRET_ACCESS_KEY
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: inventory-config
              key: S3_BUCKET
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              name: inventory-config
              key: S3_REGION
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-backend-active
  namespace: inventory-production
  labels:
    app: inventory-backend
    service: active
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: http
  - port: 9090
    targetPort: 9090
    name: metrics
  selector:
    app: inventory-backend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: inventory-backend-preview
  namespace: inventory-production
  labels:
    app: inventory-backend
    service: preview
spec:
  ports:
  - port: 80
    targetPort: 8080
    name: http
  - port: 9090
    targetPort: 9090
    name: metrics
  selector:
    app: inventory-backend
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: inventory-backend-sa
  namespace: inventory-production
  labels:
    app: inventory-backend
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: inventory-backend-role
  namespace: inventory-production
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: inventory-backend-rolebinding
  namespace: inventory-production
subjects:
- kind: ServiceAccount
  name: inventory-backend-sa
  namespace: inventory-production
roleRef:
  kind: Role
  name: inventory-backend-role
  apiGroup: rbac.authorization.k8s.io
