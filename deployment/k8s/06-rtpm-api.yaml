apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtpm-api
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: rtpm-api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rtpm
      app.kubernetes.io/component: api
      app.kubernetes.io/instance: rtpm-api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rtpm
        app.kubernetes.io/component: api
        app.kubernetes.io/instance: rtpm-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      imagePullSecrets:
      - name: rtpm-registry
      containers:
      - name: api
        image: rtpm-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        # Configuration from ConfigMap
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: ENVIRONMENT
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: LOG_LEVEL
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: API_PORT
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: CORS_ORIGINS

        # Database configuration
        - name: DATABASE_URL
          value: "postgresql+asyncpg://$(DATABASE_USER):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_NAME)"
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rtpm-secrets
              key: DATABASE_PASSWORD

        # Redis configuration
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/$(REDIS_DB)"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: REDIS_PORT
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: REDIS_DB
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rtpm-secrets
              key: REDIS_PASSWORD

        # Celery configuration
        - name: CELERY_BROKER_URL
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/$(CELERY_BROKER_DB)"
        - name: CELERY_RESULT_BACKEND
          value: "redis://:$(REDIS_PASSWORD)@$(REDIS_HOST):$(REDIS_PORT)/$(CELERY_RESULT_DB)"
        - name: CELERY_BROKER_DB
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: CELERY_BROKER_DB
        - name: CELERY_RESULT_DB
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: CELERY_RESULT_DB

        # Secrets
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: rtpm-secrets
              key: SECRET_KEY
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: rtpm-secrets
              key: JWT_SECRET_KEY

        # Performance settings
        - name: GUNICORN_WORKERS
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: GUNICORN_WORKERS
        - name: GUNICORN_WORKER_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: GUNICORN_WORKER_CONNECTIONS
        - name: GUNICORN_MAX_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: GUNICORN_MAX_REQUESTS
        - name: GUNICORN_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: rtpm-config
              key: GUNICORN_TIMEOUT

        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: logs-pvc
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: rtpm-api-service
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: rtpm-api
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: api
    app.kubernetes.io/instance: rtpm-api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rtpm-api-hpa
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: api-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rtpm-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 60
