apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-service
  namespace: collaboration
  labels:
    app.kubernetes.io/name: candlefish-collaboration
    app.kubernetes.io/component: document-service
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: document-service
      component: document
  template:
    metadata:
      labels:
        app: document-service
        component: document
        app.kubernetes.io/name: candlefish-collaboration
        app.kubernetes.io/component: document-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4003"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: document-service
        image: candlefish/collaboration-document:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4003
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: NODE_ENV
        - name: PORT
          value: "4003"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: JWT_SECRET
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: ENCRYPTION_KEY
        - name: S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: S3_BUCKET_NAME
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_REGION
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: AWS_REGION
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: LOG_LEVEL
        - name: CRDT_CONFLICT_RESOLUTION
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: CRDT_CONFLICT_RESOLUTION
        - name: CRDT_HISTORY_LIMIT
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: CRDT_HISTORY_LIMIT
        - name: CRDT_BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: CRDT_BATCH_SIZE
        - name: MAX_FILE_SIZE
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: MAX_FILE_SIZE
        - name: ALLOWED_FILE_TYPES
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: ALLOWED_FILE_TYPES
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: SENTRY_DSN
              optional: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
        - name: document-cache
          mountPath: /app/cache
        livenessProbe:
          httpGet:
            path: /health
            port: 4003
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 4003
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: 4003
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        resources:
          requests:
            memory: "768Mi"
            cpu: "300m"
          limits:
            memory: "1.5Gi"
            cpu: "1500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

      # Sidecar for document version storage
      - name: version-storage
        image: candlefish/document-version-storage:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4004
          name: storage
        env:
        - name: STORAGE_PORT
          value: "4004"
        - name: S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: S3_BUCKET_NAME
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: AWS_SECRET_ACCESS_KEY
        volumeMounts:
        - name: version-storage
          mountPath: /app/storage
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}
      - name: document-cache
        emptyDir:
          sizeLimit: 1Gi
      - name: version-storage
        emptyDir:
          sizeLimit: 2Gi

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - document-service
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: document-service
  namespace: collaboration
  labels:
    app.kubernetes.io/name: candlefish-collaboration
    app.kubernetes.io/component: document-service
spec:
  type: ClusterIP
  ports:
  - port: 4003
    targetPort: 4003
    name: http
    protocol: TCP
  - port: 4004
    targetPort: 4004
    name: storage
    protocol: TCP
  selector:
    app: document-service
    component: document

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: document-service-hpa
  namespace: collaboration
  labels:
    app.kubernetes.io/name: candlefish-collaboration
    app.kubernetes.io/component: document-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: document-service
  minReplicas: 3
  maxReplicas: 12
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metric for document operations per second
  - type: Pods
    pods:
      metric:
        name: document_operations_per_second
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 3
        periodSeconds: 60
      selectPolicy: Max

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: document-service-pdb
  namespace: collaboration
  labels:
    app.kubernetes.io/name: candlefish-collaboration
    app.kubernetes.io/component: document-service
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: document-service
      component: document

---
# CronJob for document cleanup and archiving
apiVersion: batch/v1
kind: CronJob
metadata:
  name: document-cleanup
  namespace: collaboration
  labels:
    app.kubernetes.io/name: candlefish-collaboration
    app.kubernetes.io/component: document-cleanup
spec:
  schedule: "0 2 * * *" # Daily at 2 AM
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: document-cleanup
            component: maintenance
        spec:
          restartPolicy: OnFailure
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          containers:
          - name: cleanup
            image: candlefish/collaboration-document:latest
            imagePullPolicy: IfNotPresent
            command:
            - node
            - scripts/cleanup.js
            env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: collaboration-secrets
                  key: DATABASE_URL
            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  name: collaboration-secrets
                  key: S3_BUCKET_NAME
            - name: CLEANUP_OLDER_THAN_DAYS
              value: "30"
            - name: ARCHIVE_OLDER_THAN_DAYS
              value: "90"
            resources:
              requests:
                memory: "256Mi"
                cpu: "100m"
              limits:
                memory: "512Mi"
                cpu: "500m"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                - ALL
