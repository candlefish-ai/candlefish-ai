apiVersion: apps/v1
kind: Deployment
metadata:
  name: graphql-api
  namespace: collaboration
  labels:
    app.kubernetes.io/name: candlefish-collaboration
    app.kubernetes.io/component: graphql-api
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: graphql-api
      component: api
  template:
    metadata:
      labels:
        app: graphql-api
        component: api
        app.kubernetes.io/name: candlefish-collaboration
        app.kubernetes.io/component: graphql-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: graphql-api
        image: candlefish/collaboration-graphql-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 4000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: NODE_ENV
        - name: PORT
          value: "4000"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: JWT_SECRET
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: ENCRYPTION_KEY
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: LOG_LEVEL
        - name: GRAPHQL_PLAYGROUND_ENABLED
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: GRAPHQL_PLAYGROUND_ENABLED
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: CORS_ORIGINS
        - name: RATE_LIMIT_WINDOW_MS
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: RATE_LIMIT_WINDOW_MS
        - name: RATE_LIMIT_MAX_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: collaboration-config
              key: RATE_LIMIT_MAX_REQUESTS
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: collaboration-secrets
              key: SENTRY_DSN
              optional: true
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: app-logs
          mountPath: /app/logs
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 4000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: 4000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL

      volumes:
      - name: tmp
        emptyDir: {}
      - name: app-logs
        emptyDir: {}

      # Add node affinity for better distribution
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - graphql-api
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: graphql-api-service
  namespace: collaboration
  labels:
    app.kubernetes.io/name: candlefish-collaboration
    app.kubernetes.io/component: graphql-api
spec:
  type: ClusterIP
  ports:
  - port: 4000
    targetPort: 4000
    name: http
    protocol: TCP
  selector:
    app: graphql-api
    component: api

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: graphql-api-hpa
  namespace: collaboration
  labels:
    app.kubernetes.io/name: candlefish-collaboration
    app.kubernetes.io/component: graphql-api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: graphql-api
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 60
      selectPolicy: Max

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: graphql-api-pdb
  namespace: collaboration
  labels:
    app.kubernetes.io/name: candlefish-collaboration
    app.kubernetes.io/component: graphql-api
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: graphql-api
      component: api
