# Multi-stage build for Go backend
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Create app directory
WORKDIR /build

# Copy go mod files
COPY 5470_S_Highline_Circle/backend/go.mod 5470_S_Highline_Circle/backend/go.sum ./

# Download dependencies
RUN go mod download && go mod verify

# Copy source code
COPY 5470_S_Highline_Circle/backend/ .

# Build arguments for versioning
ARG BUILD_DATE
ARG VCS_REF
ARG VERSION=unknown

# Build the application with optimizations
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -a -installsuffix cgo \
    -ldflags="-w -s \
    -X main.version=${VERSION} \
    -X main.buildDate=${BUILD_DATE} \
    -X main.gitCommit=${VCS_REF}" \
    -o inventory-backend main.go

# Production stage
FROM scratch

# Copy timezone data
COPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/

# Copy binary
COPY --from=builder /build/inventory-backend /inventory-backend

# Add metadata labels
LABEL maintainer="Patrick Smith <patrick@candlefish.ai>"
LABEL org.opencontainers.image.title="Inventory Backend API"
LABEL org.opencontainers.image.description="High-performance Go backend for inventory management"
LABEL org.opencontainers.image.vendor="Candlefish AI"
LABEL org.opencontainers.image.version="${VERSION}"
LABEL org.opencontainers.image.created="${BUILD_DATE}"
LABEL org.opencontainers.image.revision="${VCS_REF}"
LABEL org.opencontainers.image.source="https://github.com/candlefish-ai/candlefish-ai"

# Run as non-root user for security
USER 65534:65534

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD ["/inventory-backend", "health-check"]

# Run the binary
ENTRYPOINT ["/inventory-backend"]
