# Optimized Nginx configuration for Candlefish frontend applications
# Handles Next.js static exports with proper caching and security

server {
    listen 8080;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Security headers
    include /etc/nginx/conf.d/security-headers.conf;

    # Compression
    include /etc/nginx/conf.d/compression.conf;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log warn;

    # Health check endpoint
    location /health.html {
        access_log off;
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        try_files $uri =404;
    }

    # Robots.txt
    location /robots.txt {
        expires 1d;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Sitemap
    location ~* ^/sitemap.*\.xml$ {
        expires 1h;
        add_header Cache-Control "public";
        try_files $uri =404;
    }

    # Static assets with far-future expires
    location ~* \.(css|js|woff2?|ttf|eot|svg|ico|png|jpg|jpeg|gif|webp|avif)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";

        # Handle font files CORS
        location ~* \.(woff2?|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        try_files $uri =404;
    }

    # Next.js static files
    location /_next/static/ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        try_files $uri =404;
    }

    # API routes (if any) - proxy to backend
    location /api/ {
        # Add CORS headers for API requests
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Proxy to backend API (configure as needed)
        # proxy_pass http://api-backend;
        # For static sites, return 404
        return 404;
    }

    # Handle client-side routing for SPAs
    location / {
        # Try files first, then directories, then fall back to index
        try_files $uri $uri/ $uri.html /index.html;

        # Cache HTML files for a short period
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
    }

    # Security: deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to package files
    location ~* (package\.json|package-lock\.json|yarn\.lock|pnpm-lock\.yaml)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Prevent access to backup files
    location ~* \.(bak|backup|swp|tmp|temp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        internal;
    }

    # Optimize file serving
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # Buffer optimizations
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
}
