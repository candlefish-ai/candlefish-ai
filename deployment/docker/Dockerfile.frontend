# Multi-stage Docker build for Netlify Extension Management Frontend Dashboard
# Optimized for production deployment with security best practices

# Build stage
FROM node:18-alpine AS builder

# Build arguments
ARG NODE_VERSION=18
ARG BUILD_DATE
ARG VCS_REF

# Add build metadata
LABEL build.date=$BUILD_DATE \
      build.vcs-ref=$VCS_REF \
      build.version="1.0.0"

# Security: Create non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S nextjs -u 1001

# Set working directory
WORKDIR /app

# Copy package files for dependency installation
COPY brand/website/package*.json ./
COPY brand/website/tsconfig.json ./
COPY brand/website/next.config.js ./
COPY brand/website/tailwind.config.js ./
COPY brand/website/postcss.config.js ./

# Install dependencies with security optimizations
RUN npm ci --include=dev --no-audit --ignore-scripts && \
    npm cache clean --force

# Copy source code
COPY brand/website/src ./src
COPY brand/website/app ./app
COPY brand/website/components ./components
COPY brand/website/lib ./lib
COPY brand/website/hooks ./hooks
COPY brand/website/public ./public
COPY brand/website/styles ./styles

# Build Next.js application with static export
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV GENERATE_SOURCEMAP=false

RUN npm run build && npm run export

# Production stage - Nginx for serving static files
FROM nginx:1.25-alpine AS production

# Security updates
RUN apk upgrade --no-cache && \
    apk add --no-cache \
    curl \
    ca-certificates \
    tzdata && \
    rm -rf /var/cache/apk/*

# Remove default nginx config and files
RUN rm /etc/nginx/conf.d/default.conf
RUN rm -rf /usr/share/nginx/html/*

# Copy built static files
COPY --from=builder /app/out /usr/share/nginx/html

# Copy custom nginx configuration
COPY deployment/docker/nginx/netlify-extension.conf /etc/nginx/conf.d/netlify-extension.conf

# Create nginx user and set permissions
RUN addgroup -g 101 -S nginx || true && \
    adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G nginx -g nginx nginx || true && \
    chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Switch to non-root user
USER nginx

# Environment variables
ENV NGINX_WORKER_PROCESSES=auto \
    NGINX_WORKER_CONNECTIONS=1024 \
    NGINX_KEEPALIVE_TIMEOUT=65

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:80/health.html || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

# Security metadata
LABEL org.opencontainers.image.title="Netlify Extension Management Dashboard" \
      org.opencontainers.image.description="React-based dashboard for Netlify site management and monitoring" \
      org.opencontainers.image.version="1.0.0" \
      org.opencontainers.image.vendor="Candlefish Enterprise" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.source="https://github.com/candlefish-enterprise/candlefish-ai" \
      org.opencontainers.image.documentation="https://docs.candlefish.ai/netlify-extension" \
      org.opencontainers.image.created=$BUILD_DATE \
      org.opencontainers.image.revision=$VCS_REF
