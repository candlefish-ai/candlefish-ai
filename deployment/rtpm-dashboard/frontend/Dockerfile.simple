# Simple static frontend for RTPM Dashboard
FROM nginx:alpine

# Create the application directly
RUN mkdir -p /usr/share/nginx/html

# Create a basic dashboard HTML
RUN cat > /usr/share/nginx/html/index.html << 'EOF'
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RTPM Dashboard</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        header {
            background: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        h1 { color: #667eea; }
        .status { margin-top: 10px; color: #666; }
        .panels {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        .panel {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .panel h2 {
            color: #667eea;
            margin-bottom: 15px;
        }
        .metric {
            display: flex;
            justify-content: space-between;
            padding: 10px;
            background: #f5f5f5;
            margin: 5px 0;
            border-radius: 4px;
        }
        .metric-value { font-weight: bold; color: #764ba2; }
        #api-status { font-weight: bold; }
        .connected { color: #4caf50; }
        .disconnected { color: #f44336; }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>ðŸš€ Real-time Performance Monitoring Dashboard</h1>
            <div class="status">
                API Status: <span id="api-status" class="disconnected">Connecting...</span>
            </div>
        </header>
        
        <div class="panels">
            <div class="panel">
                <h2>System Metrics</h2>
                <div class="metric">
                    <span>CPU Usage</span>
                    <span class="metric-value">--%</span>
                </div>
                <div class="metric">
                    <span>Memory Usage</span>
                    <span class="metric-value">--%</span>
                </div>
                <div class="metric">
                    <span>Disk I/O</span>
                    <span class="metric-value">-- MB/s</span>
                </div>
            </div>
            
            <div class="panel">
                <h2>API Performance</h2>
                <div class="metric">
                    <span>Response Time</span>
                    <span class="metric-value">-- ms</span>
                </div>
                <div class="metric">
                    <span>Requests/sec</span>
                    <span class="metric-value">--</span>
                </div>
                <div class="metric">
                    <span>Error Rate</span>
                    <span class="metric-value">--%</span>
                </div>
            </div>
            
            <div class="panel">
                <h2>Database Status</h2>
                <div class="metric">
                    <span>Connections</span>
                    <span class="metric-value">--</span>
                </div>
                <div class="metric">
                    <span>Query Time</span>
                    <span class="metric-value">-- ms</span>
                </div>
                <div class="metric">
                    <span>Cache Hit Rate</span>
                    <span class="metric-value">--%</span>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        // Check API connectivity
        async function checkAPI() {
            const statusEl = document.getElementById('api-status');
            try {
                const response = await fetch('http://localhost:8000/health');
                if (response.ok) {
                    statusEl.textContent = 'Connected';
                    statusEl.className = 'connected';
                } else {
                    statusEl.textContent = 'Error';
                    statusEl.className = 'disconnected';
                }
            } catch (error) {
                statusEl.textContent = 'Disconnected';
                statusEl.className = 'disconnected';
            }
        }
        
        // Check every 5 seconds
        checkAPI();
        setInterval(checkAPI, 5000);
    </script>
</body>
</html>
EOF

# Configure nginx
RUN echo 'server { \
    listen 80; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    location /api { \
        proxy_pass http://api:8000; \
        proxy_http_version 1.1; \
        proxy_set_header Upgrade $http_upgrade; \
        proxy_set_header Connection "upgrade"; \
        proxy_set_header Host $host; \
        proxy_set_header X-Real-IP $remote_addr; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]