# Enhanced Ingress Configuration with SSL/TLS for RTPM
# Production-ready ingress with security headers and SSL termination

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rtpm-main-ingress
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: main-ingress
  annotations:
    # Ingress class
    kubernetes.io/ingress.class: "nginx"

    # SSL/TLS configuration
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256,ECDHE-RSA-AES128-GCM-SHA256,ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-RSA-AES256-GCM-SHA384"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"

    # Certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"

    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https:;" always;
      add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"

    # Request size limits
    nginx.ingress.kubernetes.io/proxy-body-size: "16m"
    nginx.ingress.kubernetes.io/client-max-body-size: "16m"

    # Timeout configuration
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"

    # Buffer configuration
    nginx.ingress.kubernetes.io/proxy-buffer-size: "16k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"

    # Compression
    nginx.ingress.kubernetes.io/enable-brotli: "true"
    nginx.ingress.kubernetes.io/brotli-level: "6"
    nginx.ingress.kubernetes.io/brotli-types: "text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript"

    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://rtpm.candlefish.ai,https://dashboard.rtpm.candlefish.ai"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Range"
    nginx.ingress.kubernetes.io/cors-max-age: "1728000"

    # Custom error pages
    nginx.ingress.kubernetes.io/custom-http-errors: "404,500,502,503,504"
    nginx.ingress.kubernetes.io/default-backend: "rtpm-error-pages"

    # Session affinity for WebSocket connections
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-name: "rtpm-session"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"

    # Monitoring annotations
    nginx.ingress.kubernetes.io/enable-access-log: "true"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "false"
spec:
  tls:
  - hosts:
    - rtpm.candlefish.ai
    - dashboard.rtpm.candlefish.ai
    - api.rtpm.candlefish.ai
    secretName: rtpm-wildcard-tls

  rules:
  # Main dashboard
  - host: rtpm.candlefish.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rtpm-frontend-service-active
            port:
              number: 80

  # Dashboard alias
  - host: dashboard.rtpm.candlefish.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rtpm-frontend-service-active
            port:
              number: 80

  # API backend
  - host: api.rtpm.candlefish.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rtpm-api-service-active
            port:
              number: 8000
---
# Monitoring and logging ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rtpm-monitoring-ingress
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: monitoring-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

    # Authentication for monitoring endpoints
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: monitoring-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - RTPM Monitoring"

    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;

    # Rate limiting for monitoring (more restrictive)
    nginx.ingress.kubernetes.io/rate-limit: "50"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - grafana.rtpm.candlefish.ai
    - prometheus.rtpm.candlefish.ai
    - logs.rtpm.candlefish.ai
    secretName: rtpm-wildcard-tls

  rules:
  # Grafana
  - host: grafana.rtpm.candlefish.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000

  # Prometheus
  - host: prometheus.rtpm.candlefish.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prometheus-server
            port:
              number: 9090

  # Kibana (logs)
  - host: logs.rtpm.candlefish.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kibana
            port:
              number: 5601
---
# Authentication secret for monitoring
apiVersion: v1
kind: Secret
metadata:
  name: monitoring-auth
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: monitoring-auth
type: Opaque
data:
  # Generated with: htpasswd -nb admin secure_password | base64
  auth: YWRtaW46JGFwcjEkSE9WeU9Ua24kUzVNZjZ6T3VyNUhKRzRWME5LdUlZLgoK  # admin:secure_password
---
# Error pages service
apiVersion: v1
kind: Service
metadata:
  name: rtpm-error-pages
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: error-pages
spec:
  selector:
    app.kubernetes.io/name: rtpm-error-pages
  ports:
  - port: 80
    targetPort: 8080
    name: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtpm-error-pages
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm-error-pages
    app.kubernetes.io/component: error-pages
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: rtpm-error-pages
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rtpm-error-pages
    spec:
      containers:
      - name: error-pages
        image: nginx:alpine
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: error-pages-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: error-pages-content
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            cpu: 10m
            memory: 16Mi
          limits:
            cpu: 50m
            memory: 64Mi
      volumes:
      - name: error-pages-config
        configMap:
          name: error-pages-config
      - name: error-pages-content
        configMap:
          name: error-pages-content
---
# Error pages configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: error-pages-config
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm-error-pages
data:
  nginx.conf: |
    worker_processes 1;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        server {
            listen 8080;
            server_name _;
            root /usr/share/nginx/html;

            error_page 404 /404.html;
            error_page 500 502 503 504 /50x.html;

            location = /404.html {
                internal;
            }

            location = /50x.html {
                internal;
            }

            location / {
                return 404;
            }
        }
    }
---
# Error pages content
apiVersion: v1
kind: ConfigMap
metadata:
  name: error-pages-content
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm-error-pages
data:
  404.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>404 - Page Not Found | RTPM</title>
        <style>
            body { font-family: Arial, sans-serif; text-align: center; margin-top: 50px; }
            h1 { color: #333; }
            p { color: #666; }
            a { color: #007bff; text-decoration: none; }
            a:hover { text-decoration: underline; }
        </style>
    </head>
    <body>
        <h1>404 - Page Not Found</h1>
        <p>The requested page could not be found.</p>
        <p><a href="/">Return to Dashboard</a></p>
    </body>
    </html>

  50x.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Service Temporarily Unavailable | RTPM</title>
        <style>
            body { font-family: Arial, sans-serif; text-align: center; margin-top: 50px; }
            h1 { color: #d9534f; }
            p { color: #666; }
            a { color: #007bff; text-decoration: none; }
            a:hover { text-decoration: underline; }
        </style>
    </head>
    <body>
        <h1>Service Temporarily Unavailable</h1>
        <p>We're experiencing some technical difficulties. Please try again later.</p>
        <p><a href="/">Return to Dashboard</a></p>
    </body>
    </html>
---
# Network Policy for Ingress
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: rtpm-ingress-network-policy
  namespace: rtpm-system
  labels:
    app.kubernetes.io/name: rtpm
    app.kubernetes.io/component: ingress-network-policy
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: rtpm
  policyTypes:
  - Ingress
  ingress:
  # Allow traffic from ingress controller
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 8000

  # Allow traffic from load balancer
  - from: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 8000
