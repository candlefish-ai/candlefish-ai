# Default values for candlefish
global:
  environment: development
  namespace: candlefish-dev
  registry: ghcr.io/candlefish-ai
  imagePullPolicy: IfNotPresent
  color: blue  # For blue-green deployments
  canary: false
  trafficSplit:
    stable: 90
    canary: 10

# Website Frontend Configuration
website:
  enabled: true
  name: website
  replicaCount: 2
  image:
    repository: website-frontend
    tag: latest
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  env:
    NODE_ENV: production
    NEXT_TELEMETRY_DISABLED: "1"

# Backend API Configuration
backendApi:
  enabled: true
  name: backend-api
  replicaCount: 3
  image:
    repository: backend-api
    tag: latest
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 20
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  env:
    PYTHONUNBUFFERED: "1"
    WORKERS: "4"

# Analytics Dashboard Configuration
analytics:
  enabled: true
  name: analytics-dashboard
  replicaCount: 2
  image:
    repository: analytics-dashboard
    tag: latest
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 8
    targetCPUUtilizationPercentage: 70

# Paintbox Service Configuration
paintbox:
  enabled: true
  name: paintbox-service
  replicaCount: 2
  image:
    repository: paintbox-service
    tag: latest
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 2Gi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  env:
    NODE_ENV: production
    PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium-browser

# Brand Portal Configuration
brandPortal:
  enabled: true
  name: brand-portal
  replicaCount: 2
  image:
    repository: brand-portal
    tag: latest
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 6
    targetCPUUtilizationPercentage: 70

# API Gateway Configuration
gateway:
  enabled: true
  name: api-gateway
  replicaCount: 3
  image:
    repository: api-gateway
    tag: latest
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 512Mi
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 12
    targetCPUUtilizationPercentage: 70

# Ingress Configuration
ingress:
  enabled: true
  className: alb
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:ACCOUNT:certificate/CERT-ID
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '10'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
  hosts:
    - host: candlefish.ai
      paths:
        - path: /
          pathType: Prefix
          service: website
    - host: api.candlefish.ai
      paths:
        - path: /
          pathType: Prefix
          service: backend-api
    - host: analytics.candlefish.ai
      paths:
        - path: /
          pathType: Prefix
          service: analytics-dashboard
    - host: paintbox.candlefish.ai
      paths:
        - path: /
          pathType: Prefix
          service: paintbox-service
    - host: brand.candlefish.ai
      paths:
        - path: /
          pathType: Prefix
          service: brand-portal
  tls:
    - secretName: candlefish-tls
      hosts:
        - candlefish.ai
        - api.candlefish.ai
        - analytics.candlefish.ai
        - paintbox.candlefish.ai
        - brand.candlefish.ai

# Database Configuration
postgresql:
  enabled: true
  auth:
    enablePostgresUser: true
    postgresPassword: ""  # Set via secret
    database: candlefish
  architecture: replication
  primary:
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 2000m
        memory: 4Gi
    persistence:
      enabled: true
      size: 100Gi
      storageClass: gp3
  readReplicas:
    replicaCount: 2
    resources:
      requests:
        cpu: 250m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 2Gi
  metrics:
    enabled: true

# Redis Configuration
redis:
  enabled: true
  architecture: replication
  auth:
    enabled: true
    password: ""  # Set via secret
  master:
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi
    persistence:
      enabled: true
      size: 10Gi
      storageClass: gp3
  replica:
    replicaCount: 2
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 250m
        memory: 256Mi
  metrics:
    enabled: true

# Monitoring Configuration
monitoring:
  prometheus:
    enabled: true
    server:
      resources:
        requests:
          cpu: 500m
          memory: 1Gi
        limits:
          cpu: 2000m
          memory: 4Gi
      persistentVolume:
        enabled: true
        size: 50Gi
        storageClass: gp3
  grafana:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi
    persistence:
      enabled: true
      size: 5Gi
      storageClass: gp3

# Security Configuration
podSecurityPolicy:
  enabled: true

networkPolicy:
  enabled: true

serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/candlefish-service-role

# Secrets Configuration
secrets:
  database:
    enabled: true
    name: candlefish-database-secret
    data:
      username: candlefish
      password: ""  # Set via external secret operator
      host: candlefish-postgresql
      port: "5432"
      database: candlefish
  redis:
    enabled: true
    name: candlefish-redis-secret
    data:
      password: ""  # Set via external secret operator
      host: candlefish-redis-master
      port: "6379"
  api:
    enabled: true
    name: candlefish-api-secret
    data:
      jwt-secret: ""  # Set via external secret operator
      encryption-key: ""  # Set via external secret operator

# External Secrets Operator Configuration
externalSecrets:
  enabled: true
  secretStore:
    provider: aws
    region: us-west-2
    service: SecretsManager
