name: Claude Automation Suite

on:
  push:
    branches: [main, development]
  pull_request:
    types: [opened, synchronize, reopened]
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:

env:
  CLAUDE_MODEL: claude-opus-4.1

jobs:
  code-analysis:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Claude CLI
        run: |
          curl -fsSL https://docs.anthropic.com/claude-code/install.sh | bash
          echo "$HOME/.claude/bin" >> $GITHUB_PATH

      - name: Configure Claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          claude auth configure --api-key $ANTHROPIC_API_KEY

      - name: Run code analysis
        run: |
          claude analyze \
            --model $CLAUDE_MODEL \
            --output reports/analysis.json \
            --format json \
            .

      - name: Generate improvement suggestions
        run: |
          claude suggest \
            --model $CLAUDE_MODEL \
            --context reports/analysis.json \
            --output reports/suggestions.md

      - name: Upload analysis reports
        uses: actions/upload-artifact@v4
        with:
          name: claude-analysis
          path: reports/

  test-generation:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Claude CLI
        run: |
          curl -fsSL https://docs.anthropic.com/claude-code/install.sh | bash
          echo "$HOME/.claude/bin" >> $GITHUB_PATH

      - name: Configure Claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          claude auth configure --api-key $ANTHROPIC_API_KEY

      - name: Generate missing tests
        run: |
          claude generate-tests \
            --model $CLAUDE_MODEL \
            --coverage-target 80 \
            --framework jest \
            --output __tests__/generated/

      - name: Run generated tests
        run: |
          npm test -- __tests__/generated/

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: coverage/

  documentation-sync:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Claude CLI
        run: |
          curl -fsSL https://docs.anthropic.com/claude-code/install.sh | bash
          echo "$HOME/.claude/bin" >> $GITHUB_PATH

      - name: Configure Claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          claude auth configure --api-key $ANTHROPIC_API_KEY

      - name: Update documentation
        run: |
          claude document \
            --model $CLAUDE_MODEL \
            --update-existing \
            --format markdown \
            --output docs/

      - name: Create PR if changes
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'docs: Update documentation via Claude'
          title: '[Claude] Documentation updates'
          body: |
            This PR contains documentation updates generated by Claude.

            - Updated API documentation
            - Added missing JSDoc comments
            - Improved README sections
          branch: claude/docs-update
          delete-branch: true

  security-audit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Claude CLI
        run: |
          curl -fsSL https://docs.anthropic.com/claude-code/install.sh | bash
          echo "$HOME/.claude/bin" >> $GITHUB_PATH

      - name: Configure Claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          claude auth configure --api-key $ANTHROPIC_API_KEY

      - name: Run security audit
        run: |
          claude security-scan \
            --model $CLAUDE_MODEL \
            --severity high,critical \
            --output reports/security.json

      - name: Create security issue if needed
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = JSON.parse(fs.readFileSync('reports/security.json', 'utf8'));

            if (report.vulnerabilities.length > 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: '[Security] Vulnerabilities detected by Claude',
                body: `Claude has detected ${report.vulnerabilities.length} security vulnerabilities.\n\nPlease review the security report in the workflow artifacts.`,
                labels: ['security', 'claude-generated']
              });
            }

  performance-optimization:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - uses: actions/checkout@v4

      - name: Setup environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Claude CLI
        run: |
          curl -fsSL https://docs.anthropic.com/claude-code/install.sh | bash
          echo "$HOME/.claude/bin" >> $GITHUB_PATH

      - name: Configure Claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          claude auth configure --api-key $ANTHROPIC_API_KEY

      - name: Analyze performance
        run: |
          npm run build

          claude optimize \
            --model $CLAUDE_MODEL \
            --target performance \
            --metrics "bundle-size,load-time,runtime" \
            --output reports/performance.json

      - name: Apply optimizations
        run: |
          claude apply-optimizations \
            --model $CLAUDE_MODEL \
            --report reports/performance.json \
            --auto-commit false

      - name: Create optimization PR
        if: success()
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'perf: Apply Claude performance optimizations'
          title: '[Claude] Performance optimizations'
          body: |
            Claude has identified and applied performance optimizations.

            Please review the changes carefully before merging.
          branch: claude/performance-opt
          delete-branch: true
