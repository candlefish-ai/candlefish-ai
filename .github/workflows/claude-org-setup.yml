name: Claude Organization-Wide Setup

on:
  workflow_call:
    inputs:
      project_name:
        required: true
        type: string
    secrets:
      ORG_GITHUB_TOKEN:
        required: true

  workflow_dispatch:
    inputs:
      target_repos:
        description: 'Target repositories (comma-separated or "all")'
        required: false
        default: 'all'
        type: string

jobs:
  setup-org-claude:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      
    steps:
      - name: Setup GitHub CLI
        run: |
          echo "${{ secrets.ORG_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}" | gh auth login --with-token
      
      - name: Get organization repositories
        id: get-repos
        run: |
          ORG_NAME="candlefish"  # Update with your org name
          
          if [ "${{ github.event.inputs.target_repos }}" = "all" ]; then
            # Get all org repositories
            REPOS=$(gh repo list $ORG_NAME --limit 100 --json name,isPrivate,isArchived \
              --jq '.[] | select(.isArchived == false) | .name')
          else
            # Use specified repositories
            REPOS="${{ github.event.inputs.target_repos }}"
          fi
          
          echo "repos<<EOF" >> $GITHUB_OUTPUT
          echo "$REPOS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create organization Claude resources repository
        run: |
          ORG_NAME="candlefish"
          CLAUDE_REPO="claude-resources"
          
          # Check if repository exists
          if ! gh repo view "$ORG_NAME/$CLAUDE_REPO" &>/dev/null; then
            echo "Creating $CLAUDE_REPO repository..."
            gh repo create "$ORG_NAME/$CLAUDE_REPO" \
              --private \
              --description "Shared Claude agents and commands for all Candlefish projects" \
              --clone
            
            cd "$CLAUDE_REPO"
            
            # Initialize with README
            cat > README.md << 'EOF'
# Candlefish Claude Resources

Centralized Claude agents and commands for all Candlefish projects.

## Structure
- `/agents/` - Claude agents from upstream
- `/commands/` - Claude commands from upstream
- `/custom/` - Organization-specific customizations
- `/workflows/` - Reusable GitHub Actions workflows

## Usage
This repository is automatically synced to all Candlefish projects.
See individual project `.claude/` directories for local access.
EOF
            
            git add README.md
            git commit -m "Initial commit"
            git push origin main
          fi
      
      - name: Setup reusable workflow
        run: |
          # Create reusable workflow in organization repository
          cat > .github/workflows/claude-sync-reusable.yml << 'EOF'
name: Claude Sync Reusable

on:
  workflow_call:
    inputs:
      sync_type:
        type: string
        default: 'both'
    secrets:
      token:
        required: true

jobs:
  sync-claude:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: candlefish/claude-resources
          path: claude-resources
          token: ${{ secrets.token }}
      
      - uses: actions/checkout@v4
        with:
          path: target-repo
          token: ${{ secrets.token }}
      
      - name: Sync Claude resources
        run: |
          # Copy resources to target repository
          mkdir -p target-repo/.claude
          cp -r claude-resources/agents target-repo/.claude/
          cp -r claude-resources/commands target-repo/.claude/
          
          # Create symlink script for local development
          cat > target-repo/.claude/setup-local.sh << 'SCRIPT'
#!/bin/bash
# Setup local Claude resources with symlinks to org repository

CLAUDE_ORG_REPO="$HOME/code/candlefish/claude-resources"
CLAUDE_LOCAL="$HOME/.claude"

if [ ! -d "$CLAUDE_ORG_REPO" ]; then
  echo "Cloning organization Claude resources..."
  mkdir -p "$(dirname "$CLAUDE_ORG_REPO")"
  git clone https://github.com/candlefish/claude-resources.git "$CLAUDE_ORG_REPO"
fi

# Create symlinks
mkdir -p "$CLAUDE_LOCAL"
ln -sfn "$CLAUDE_ORG_REPO/agents" "$CLAUDE_LOCAL/agents"
ln -sfn "$CLAUDE_ORG_REPO/commands" "$CLAUDE_LOCAL/commands"

echo "âœ… Claude resources linked from organization repository"
SCRIPT
          
          chmod +x target-repo/.claude/setup-local.sh
          
          # Commit changes
          cd target-repo
          git config user.name "Claude Sync Bot"
          git config user.email "noreply@candlefish.com"
          git add .claude
          git commit -m "ðŸ¤– Sync Claude resources from organization" || echo "No changes"
          git push
EOF
      
      - name: Deploy to all repositories
        run: |
          ORG_NAME="candlefish"
          
          # For each repository
          for repo in ${{ steps.get-repos.outputs.repos }}; do
            echo "Setting up Claude sync for $repo..."
            
            # Add workflow to repository
            gh workflow run claude-sync-reusable.yml \
              --repo "$ORG_NAME/$repo" \
              -f sync_type=both \
              2>/dev/null || echo "Workflow not found, creating..."
            
            # Create workflow file if it doesn't exist
            cat > claude-sync.yml << 'EOF'
name: Sync Claude Resources

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '.github/workflows/claude-sync.yml'

jobs:
  sync:
    uses: candlefish/claude-resources/.github/workflows/claude-sync-reusable.yml@main
    with:
      sync_type: both
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}
EOF
            
            # Commit workflow to repository
            gh workflow run deploy-workflow.yml \
              --repo "$ORG_NAME/$repo" \
              -F workflow=@claude-sync.yml \
              2>/dev/null || echo "Manual setup needed for $repo"
          done