name: Test Simplified Pipeline
# Simplified workflow to test the 5-project structure

on:
  workflow_dispatch:
  push:
    branches:
      - feat/github-actions-overhaul
      - test/github-actions-validation

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8.15.6'

jobs:
  test-build:
    name: Test Build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        include:
          - project: website
            package: '@candlefish-ai/website'
            path: apps/website
          - project: analytics
            package: '@candlefish-ai/analytics-dashboard'
            path: apps/analytics-dashboard
          - project: collab
            package: '@candlefish-ai/mobile-collaboration'
            path: apps/mobile-collaboration
          - project: paintbox
            package: 'paintbox-app'
            path: projects/paintbox
          - project: promoter
            package: 'promoteros'
            path: projects/promoterOS

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Skip submodules that are broken
          submodules: false

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Install dependencies
        run: |
          pnpm install --prefer-offline --no-frozen-lockfile

      - name: Check if project exists
        run: |
          if [ -d "${{ matrix.path }}" ]; then
            echo "✅ Project directory exists: ${{ matrix.path }}"
            ls -la "${{ matrix.path }}"
          else
            echo "❌ Project directory not found: ${{ matrix.path }}"
            exit 1
          fi

      - name: Build project
        run: |
          # Try to build with turbo if configured
          if pnpm turbo build --filter=${{ matrix.package }} --dry-run 2>/dev/null; then
            echo "Building with turbo..."
            pnpm turbo build --filter=${{ matrix.package }}
          else
            echo "Building directly in project directory..."
            cd "${{ matrix.path }}"
            if [ -f "package.json" ]; then
              npm run build || echo "Build script not found or failed"
            fi
          fi

      - name: Summary
        if: always()
        run: |
          echo "## Build Summary for ${{ matrix.project }}" >> $GITHUB_STEP_SUMMARY
          echo "- Package: ${{ matrix.package }}" >> $GITHUB_STEP_SUMMARY
          echo "- Path: ${{ matrix.path }}" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
