name: Secrets Sync
# Sync secrets from AWS Secrets Manager to GitHub Secrets

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 1' # Weekly on Monday at 3 AM UTC

permissions:
  contents: read
  id-token: write
  secrets: write

jobs:
  sync-secrets:
    name: Sync Secrets from AWS
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-secrets-sync
          aws-region: us-east-1

      - name: Fetch secrets from AWS Secrets Manager
        id: fetch-secrets
        run: |
          # List of secrets to sync
          SECRETS=(
            "candlefish/global/api-keys"
            "candlefish/global/database-credentials"
            "candlefish/global/service-accounts"
            "candlefish/production/env-vars"
            "candlefish/staging/env-vars"
            "candlefish/dev/env-vars"
          )

          # Fetch each secret
          for secret_name in "${SECRETS[@]}"; do
            echo "Fetching $secret_name..."

            # Get secret value
            secret_value=$(aws secretsmanager get-secret-value \
              --secret-id "$secret_name" \
              --query SecretString \
              --output text)

            # Parse JSON and set as output
            echo "$secret_value" | jq -r 'to_entries[] | "\(.key)=\(.value)"' | while IFS= read -r line; do
              key=$(echo "$line" | cut -d= -f1)
              value=$(echo "$line" | cut -d= -f2-)

              # Convert secret name to GitHub-compatible format
              github_key=$(echo "${secret_name}_${key}" | tr '/' '_' | tr '-' '_' | tr '[:lower:]' '[:upper:]')

              # Store in temporary file (encrypted)
              echo "${github_key}=${value}" >> secrets.env
            done
          done

      - name: Update GitHub Secrets
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const sodium = require('tweetsodium');

            // Read secrets from file
            const secretsFile = fs.readFileSync('secrets.env', 'utf8');
            const secrets = secretsFile.split('\n').filter(line => line);

            // Get repository public key for encryption
            const { data: publicKey } = await github.rest.actions.getRepoPublicKey({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            // Update each secret
            for (const secretLine of secrets) {
              const [name, ...valueParts] = secretLine.split('=');
              const value = valueParts.join('=');

              // Encrypt the secret value
              const messageBytes = Buffer.from(value);
              const keyBytes = Buffer.from(publicKey.key, 'base64');
              const encryptedBytes = sodium.seal(messageBytes, keyBytes);
              const encrypted = Buffer.from(encryptedBytes).toString('base64');

              // Create or update the secret
              try {
                await github.rest.actions.createOrUpdateRepoSecret({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  secret_name: name,
                  encrypted_value: encrypted,
                  key_id: publicKey.key_id
                });
                console.log(`✅ Updated secret: ${name}`);
              } catch (error) {
                console.error(`❌ Failed to update secret: ${name}`, error.message);
              }
            }

      - name: Cleanup
        if: always()
        run: |
          # Securely delete temporary files
          shred -vfz secrets.env 2>/dev/null || rm -f secrets.env

      - name: Notify on completion
        if: always()
        run: |
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ Secrets successfully synced from AWS Secrets Manager"
          else
            echo "❌ Failed to sync secrets. Check AWS permissions and secret names."
          fi
