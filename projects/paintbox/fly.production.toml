# Production Fly.io configuration for Paintbox
# Optimized for AWS Secrets Manager integration and zero-downtime deployments

app = "paintbox"
primary_region = "sjc"
kill_signal = "SIGINT"
kill_timeout = "30s"

[build]
  dockerfile = "Dockerfile.production"

[env]
  NODE_ENV = "production"
  PORT = "3000"
  HOSTNAME = "0.0.0.0"
  NEXT_TELEMETRY_DISABLED = "1"
  TZ = "UTC"
  # AWS Configuration
  AWS_REGION = "us-east-1"
  AWS_DEFAULT_REGION = "us-east-1"

# HTTP service configuration with enhanced health checks
[http_service]
  internal_port = 3000
  force_https = true
  auto_stop_machines = "suspend"
  auto_start_machines = true
  min_machines_running = 1
  max_machines_running = 10

  # Health check for general application
  [[http_service.checks]]
    grace_period = "10s"
    interval = "30s"
    method = "GET"
    timeout = "10s"
    path = "/api/health"
    headers = { "User-Agent" = "Fly Health Check" }
    [http_service.checks.tls_skip_verify]
      enabled = false

  # Specific JWKS endpoint validation
  [[http_service.checks]]
    grace_period = "15s"
    interval = "60s"
    method = "GET"
    timeout = "15s"
    path = "/.well-known/jwks.json"
    headers = { "User-Agent" = "Fly JWKS Check", "Accept" = "application/json" }

  # Homepage check
  [[http_service.checks]]
    grace_period = "20s"
    interval = "120s"
    method = "GET"
    timeout = "10s"
    path = "/"

# Machine configuration optimized for production workloads
[[vm]]
  size = "shared-cpu-2x"
  memory = "2gb"
  processes = ["app"]

# Volume configuration for persistent logs and cache
[mounts]
  source = "paintbox_data"
  destination = "/app/data"
  initial_size = "10gb"

# Deploy configuration for zero-downtime deployments
[deploy]
  strategy = "bluegreen"
  wait_timeout = "5m"

  # Release command to validate AWS integration
  release_command = "node /app/scripts/validate-aws-secrets-integration.js"

# Process configuration
[processes]
  app = "node server.js"

# Restart policy
[restart]
  policy = "on-failure"
  max_restarts = 10
  restart_delay = "30s"

# Metrics and monitoring
[metrics]
  port = 9090
  path = "/metrics"
