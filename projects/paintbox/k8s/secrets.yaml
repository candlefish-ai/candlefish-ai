# Secrets managed by AWS Secrets Manager with External Secrets Operator
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secrets-manager
  namespace: system-analyzer
spec:
  provider:
    aws:
      service: SecretsManager
      region: us-east-1
      auth:
        secretRef:
          accessKeyID:
            name: aws-credentials
            key: access-key-id
          secretAccessKey:
            name: aws-credentials
            key: secret-access-key
---
# Database credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: database-credentials
  namespace: system-analyzer
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: database-credentials
    creationPolicy: Owner
  data:
  - secretKey: username
    remoteRef:
      key: system-analyzer/database
      property: username
  - secretKey: password
    remoteRef:
      key: system-analyzer/database
      property: password
  - secretKey: host
    remoteRef:
      key: system-analyzer/database
      property: host
  - secretKey: port
    remoteRef:
      key: system-analyzer/database
      property: port
  - secretKey: database
    remoteRef:
      key: system-analyzer/database
      property: database
---
# Redis credentials
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-credentials
  namespace: system-analyzer
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: redis-credentials
    creationPolicy: Owner
  data:
  - secretKey: password
    remoteRef:
      key: system-analyzer/redis
      property: password
  - secretKey: host
    remoteRef:
      key: system-analyzer/redis
      property: host
  - secretKey: port
    remoteRef:
      key: system-analyzer/redis
      property: port
---
# JWT and API secrets
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: api-secrets
  namespace: system-analyzer
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: api-secrets
    creationPolicy: Owner
  data:
  - secretKey: jwt-secret
    remoteRef:
      key: system-analyzer/api
      property: jwt-secret
  - secretKey: encryption-key
    remoteRef:
      key: system-analyzer/api
      property: encryption-key
---
# TLS certificates
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: tls-certificates
  namespace: system-analyzer
spec:
  refreshInterval: 24h
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: tls-certificates
    creationPolicy: Owner
    template:
      type: kubernetes.io/tls
  data:
  - secretKey: tls.crt
    remoteRef:
      key: system-analyzer/tls
      property: certificate
  - secretKey: tls.key
    remoteRef:
      key: system-analyzer/tls
      property: private-key
