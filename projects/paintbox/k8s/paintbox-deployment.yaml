apiVersion: apps/v1
kind: Deployment
metadata:
  name: paintbox-app
  namespace: paintbox-production
  labels:
    app: paintbox
    component: application
    version: v1.0.0
    environment: production
    app.kubernetes.io/name: paintbox
    app.kubernetes.io/component: application
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/part-of: candlefish-ai
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: paintbox
      component: application
  template:
    metadata:
      labels:
        app: paintbox
        component: application
        version: v1.0.0
        environment: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: paintbox-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: paintbox-app
        image: ghcr.io/candlefish-ai/paintbox:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 8081
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: HOSTNAME
          value: "0.0.0.0"
        - name: NEXTAUTH_URL
          value: "https://paintbox.candlefish.ai"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: paintbox-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: paintbox-secrets
              key: redis-url
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: paintbox-secrets
              key: nextauth-secret
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: paintbox-config
              key: aws-region
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: paintbox-secrets
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: paintbox-secrets
              key: aws-secret-access-key
        - name: SALESFORCE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: paintbox-secrets
              key: salesforce-client-id
        - name: SALESFORCE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: paintbox-secrets
              key: salesforce-client-secret
        - name: COMPANYCAM_API_KEY
          valueFrom:
            secretKeyRef:
              name: paintbox-secrets
              key: companycam-api-key
        - name: TEMPORAL_SERVER_URL
          valueFrom:
            configMapKeyRef:
              name: paintbox-config
              key: temporal-server-url
        - name: OPENTELEMETRY_COLLECTOR_URL
          valueFrom:
            configMapKeyRef:
              name: paintbox-config
              key: otel-collector-url
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: app-tmp
          mountPath: /app/tmp
        - name: app-cache
          mountPath: /app/cache
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: app-logs
        emptyDir:
          sizeLimit: 1Gi
      - name: app-tmp
        emptyDir:
          sizeLimit: 500Mi
      - name: app-cache
        emptyDir:
          sizeLimit: 2Gi
      - name: config-volume
        configMap:
          name: paintbox-config
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - paintbox
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: paintbox-service
  namespace: paintbox-production
  labels:
    app: paintbox
    component: application
    app.kubernetes.io/name: paintbox
    app.kubernetes.io/component: service
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 8081
    targetPort: metrics
    protocol: TCP
  selector:
    app: paintbox
    component: application
  sessionAffinity: None
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: paintbox-ingress
  namespace: paintbox-production
  labels:
    app: paintbox
    component: ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
spec:
  tls:
  - hosts:
    - paintbox.candlefish.ai
    secretName: paintbox-tls
  rules:
  - host: paintbox.candlefish.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: paintbox-service
            port:
              number: 80
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: paintbox-pdb
  namespace: paintbox-production
  labels:
    app: paintbox
    component: application
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: paintbox
      component: application
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: paintbox-hpa
  namespace: paintbox-production
  labels:
    app: paintbox
    component: autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: paintbox-app
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max