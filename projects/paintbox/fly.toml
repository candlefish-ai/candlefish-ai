# fly.toml app configuration file
# Production-optimized configuration for Next.js Paintbox application
# See https://fly.io/docs/reference/configuration/ for information about how to use this file.

app = "paintbox"
primary_region = "sjc"

[build]
  dockerfile = "Dockerfile.simple"

[env]
  NODE_ENV = "production"
  PORT = "8080"
  # Optimized database configuration
  DATABASE_URL = "file:/data/paintbox.db?mode=wal&cache=shared&_journal_mode=WAL"
  # Aggressive memory optimization
  NODE_OPTIONS = "--max-old-space-size=1024 --optimize-for-size --gc-interval=100 --expose-gc"
  NEXT_TELEMETRY_DISABLED = "1"
  # Disable source maps to save memory
  GENERATE_SOURCEMAP = "false"
  # Optimized connection pooling
  POOL_MIN = "1"
  POOL_MAX = "3"
  POOL_IDLE_TIMEOUT = "10000"
  # Memory monitoring
  ENABLE_MEMORY_MONITOR = "true"
  MEMORY_CHECK_INTERVAL = "30000"
  # Cache configuration
  CACHE_MAX_SIZE = "25"
  CACHE_TTL = "300"
  # Performance optimizations
  MINIMIZE_MEMORY = "true"
  COMPRESS_RESPONSES = "true"

[http_service]
  internal_port = 8080
  force_https = true
  auto_stop_machines = "stop"
  auto_start_machines = true
  min_machines_running = 2
  max_machines_running = 6
  processes = ["app"]

  # Reduced connection limits for memory efficiency
  concurrency = { type = "requests", hard_limit = 100, soft_limit = 75 }

# Primary health check - quick response for load balancer
[[http_service.checks]]
  grace_period = "15s"
  interval = "15s"
  method = "GET"
  timeout = "5s"
  path = "/api/simple-health"
  headers = { "User-Agent" = "fly-health-check" }

# Comprehensive health check - re-enabled with adjusted memory thresholds
[[http_service.checks]]
  grace_period = "30s"
  interval = "60s"
  method = "GET"
  timeout = "10s"
  path = "/api/health"
  headers = { "User-Agent" = "fly-deep-health-check" }

# TCP health check as fallback
[[http_service.checks]]
  grace_period = "10s"
  interval = "30s"
  timeout = "3s"
  type = "tcp"
  port = 8080

# Optimized VM configuration
[[vm]]
  cpu_kind = "shared"
  cpus = 2
  memory_mb = 2048
  # Swap configuration for memory pressure relief
  swap_size_mb = 512

# Persistent volume for database, logs and cache
[mounts]
  source = "paintbox_data"
  destination = "/data"

# Auto-scaling configuration with memory-based scaling
[metrics]
  port = 9091
  path = "/metrics"

# Process management
[[processes]]
  name = "app"
  # Restart on high memory usage
  [[processes.health_checks]]
    type = "memory"
    threshold_mb = 1800
    action = "restart"

# Deploy configuration for zero-downtime
[deploy]
  strategy = "rolling"
  max_unavailable = 0.25
  wait_timeout = "10m"

# Graceful shutdown configuration
kill_signal = "SIGTERM"
kill_timeout = "30s"

# Restart policy for memory issues
[[restart]]
  policy = "on-failure"
  max_retries = 3
  # Restart if memory exceeds 90%
  memory_threshold_percentage = 90
