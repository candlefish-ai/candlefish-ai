# Multi-stage build for GraphQL Server
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat python3 make g++
WORKDIR /app

# Copy dependency files
COPY package.json package-lock.json ./
RUN npm ci --only=production

# Build stage
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build TypeScript
RUN npm run build:graphql

# Production stage
FROM base AS production
WORKDIR /app

# Install curl for health checks
RUN apk add --no-cache curl

# Create non-root user
RUN addgroup --system --gid 1001 graphql
RUN adduser --system --uid 1001 graphql

# Copy built application
COPY --from=builder --chown=graphql:graphql /app/dist ./dist
COPY --from=builder --chown=graphql:graphql /app/node_modules ./node_modules
COPY --from=builder --chown=graphql:graphql /app/package.json ./

# Copy GraphQL schema files
COPY --chown=graphql:graphql lib/graphql/schema.graphql ./lib/graphql/

USER graphql

EXPOSE 4000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:4000/health || exit 1

# Start GraphQL server
CMD ["node", "dist/server.js"]
