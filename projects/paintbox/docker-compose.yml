version: '3.8'

services:
  # Paintbox Next.js Frontend
  paintbox-frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: paintbox-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://paintbox:paintbox123@postgres:5432/paintbox
      - REDIS_URL=redis://redis:6379
      - ANALYTICS_API_URL=http://analytics-api:8000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - postgres
      - redis
      - analytics-api
    networks:
      - paintbox-network

  # Analytics API (FastAPI)
  analytics-api:
    build:
      context: ../../apps/rtpm-api
      dockerfile: Dockerfile
    container_name: analytics-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://paintbox:paintbox123@postgres:5432/analytics
      - TIMESCALE_URL=postgresql://paintbox:paintbox123@timescaledb:5432/metrics
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret-change-in-production
    depends_on:
      - postgres
      - timescaledb
      - redis
    networks:
      - paintbox-network

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: paintbox-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=paintbox
      - POSTGRES_PASSWORD=paintbox123
      - POSTGRES_DB=paintbox
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - paintbox-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U paintbox"]
      interval: 10s
      timeout: 5s
      retries: 5

  # TimescaleDB for Analytics
  timescaledb:
    image: timescale/timescaledb:latest-pg16
    container_name: paintbox-timescaledb
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=paintbox
      - POSTGRES_PASSWORD=paintbox123
      - POSTGRES_DB=metrics
    volumes:
      - timescale-data:/var/lib/postgresql/data
    networks:
      - paintbox-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: paintbox-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - paintbox-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Grafana for Monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: paintbox-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-app
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - paintbox-network
    depends_on:
      - prometheus

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: paintbox-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - paintbox-network

  # NGINX Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: paintbox-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - paintbox-frontend
      - analytics-api
    networks:
      - paintbox-network

networks:
  paintbox-network:
    driver: bridge

volumes:
  postgres-data:
  timescale-data:
  redis-data:
  grafana-data:
  prometheus-data:
