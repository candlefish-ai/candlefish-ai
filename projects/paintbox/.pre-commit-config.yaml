repos:
  # General code quality
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-json
      - id: pretty-format-json
        args: ['--autofix']

  # JavaScript/TypeScript
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.52.0
    hooks:
      - id: eslint
        files: \.[jt]sx?$
        types: [file]
        additional_dependencies:
          - eslint@8.52.0
          - eslint-config-next@latest
          - eslint-plugin-react@latest
          - eslint-plugin-react-hooks@latest
          - '@typescript-eslint/eslint-plugin@latest'
          - '@typescript-eslint/parser@latest'

  # Prettier formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types_or: [css, javascript, jsx, typescript, tsx, json, yaml, markdown]
        exclude: '^(build/|dist/|.next/)'

  # TypeScript type checking
  - repo: local
    hooks:
      - id: typescript
        name: TypeScript type checking
        entry: bash -c 'npx tsc --noEmit'
        language: system
        types: [typescript]
        pass_filenames: false

      # Test Tyler-Setup components
      - id: test-components
        name: Test Tyler-Setup components
        entry: npm run test -- --findRelatedTests
        language: system
        types: [typescript, tsx]
        files: ^components/

      # Check bundle size
      - id: bundle-size
        name: Check bundle size
        entry: bash -c 'npm run build && npx bundlesize'
        language: system
        pass_filenames: false
        stages: [push]

      # Accessibility check
      - id: accessibility
        name: Check accessibility
        entry: npx pa11y-ci --threshold 0
        language: system
        types: [html, tsx]
        files: ^(components/|app/)

      # Security audit
      - id: security-audit
        name: Security audit
        entry: npm audit --production --audit-level=moderate
        language: system
        pass_filenames: false

      # CSS variable validation
      - id: css-variables
        name: Validate CSS variables
        entry: bash -c 'grep -r "var(--" --include="*.tsx" --include="*.css" . | grep -v "var(--touch-target\|--primary\|--secondary\|--background\|--foreground\|--card\|--popover\|--muted\|--accent\|--destructive\|--border\|--input\|--ring\|--radius\|--success\|--warning\|--info)" && exit 1 || exit 0'
        language: system
        pass_filenames: false

      # Type safety check
      - id: no-any-types
        name: Check for any types
        entry: bash -c 'grep -r ": any" --include="*.ts" --include="*.tsx" . --exclude-dir=node_modules --exclude-dir=.next && echo "Found any types!" && exit 1 || exit 0'
        language: system
        pass_filenames: false

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.12.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # Documentation generation
  - repo: local
    hooks:
      - id: update-docs
        name: Update documentation
        entry: node .github/scripts/generate-component-docs.js
        language: system
        files: ^components/.*\.tsx$
        pass_filenames: false