# Dockerfile.staging - Quick deployment using pre-built assets
FROM node:20-alpine

WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache libc6-compat tini

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy package files
COPY --chown=nextjs:nodejs package*.json ./

# Install production dependencies
RUN npm ci --only=production || npm install --production --legacy-peer-deps

# Copy all application files
COPY --chown=nextjs:nodejs . .

# Create data directory for database
RUN mkdir -p /data && chown -R nextjs:nodejs /data

# Set environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Set user
USER nextjs

# Expose port
EXPOSE 8080

# Use tini as entrypoint for proper signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Start the application
CMD ["npm", "start"]
