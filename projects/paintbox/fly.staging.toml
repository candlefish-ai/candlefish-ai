# Fly.io Staging Configuration for Eggshell
# Generated: 2025-08-22
# Purpose: Safe staging deployment before production

app = "paintbox-staging"
primary_region = "sjc"

[build]
  dockerfile = "Dockerfile.staging"

[env]
  NODE_ENV = "staging"
  PORT = "8080"
  # Fixed: Persistent database with WAL mode
  DATABASE_URL = "file:/data/paintbox.db?mode=wal"
  # App branding
  NEXT_PUBLIC_APP_NAME = "Eggshell (Staging)"
  NEXT_PUBLIC_APP_URL = "https://paintbox-staging.fly.dev"
  NEXT_PUBLIC_API_URL = "https://paintbox-staging.fly.dev"
  # Performance settings
  NODE_OPTIONS = "--max-old-space-size=1536"
  NEXT_TELEMETRY_DISABLED = "1"
  GENERATE_SOURCEMAP = "false"
  # Connection pooling
  POOL_MIN = "2"
  POOL_MAX = "10"
  POOL_IDLE_TIMEOUT = "30000"
  # Feature flags for staging
  ENABLE_SALESFORCE_INTEGRATION = "false"  # Disable until secrets configured
  ENABLE_COMPANYCAM_INTEGRATION = "false"  # Disable until secrets configured
  ENABLE_OFFLINE_MODE = "true"
  ENABLE_TELEMETRY = "true"
  ENABLE_DEBUG_LOGS = "true"

[http_service]
  internal_port = 8080
  force_https = true
  auto_stop_machines = "stop"
  auto_start_machines = true
  min_machines_running = 1
  max_machines_running = 2
  processes = ["app"]

  # Connection limits for staging (lower than production)
  concurrency = { type = "requests", hard_limit = 100, soft_limit = 75 }

# Health checks
[[http_service.checks]]
  grace_period = "15s"
  interval = "15s"
  method = "GET"
  timeout = "5s"
  path = "/api/simple-health"
  headers = { "User-Agent" = "fly-health-check" }

[[http_service.checks]]
  grace_period = "30s"
  interval = "60s"
  method = "GET"
  timeout = "10s"
  path = "/api/health"

# Staging VM configuration (smaller than production)
[[vm]]
  cpu_kind = "shared"
  cpus = 1
  memory_mb = 1024

# Persistent volume for database
[mounts]
  source = "paintbox_staging_data"
  destination = "/data"

# Deploy configuration
[deploy]
  strategy = "rolling"
  max_unavailable = 0.5
  wait_timeout = "5m"

# Process management
kill_signal = "SIGTERM"
kill_timeout = "30s"
