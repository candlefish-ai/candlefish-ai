# Dockerfile for Candlefish Slack Workspace Manager
# Multi-stage build for optimized production image

FROM python:3.12-slim as builder

# Install system dependencies including CLI tools
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    libssl-dev \
    libffi-dev \
    git \
    curl \
    wget \
    gnupg \
    && rm -rf /var/lib/apt/lists/*

# Install GitHub CLI
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null && \
    apt-get update && apt-get install -y gh

# Install Fly CLI
RUN curl -L https://fly.io/install.sh | sh
ENV PATH="/root/.fly/bin:$PATH"

# Install Vercel CLI
RUN curl -sf https://binaries.vercel.com/cli/linux/vercel.json | grep -o '"version":"[^"]*' | grep -o '[^"]*$' | head -n1 | xargs -I {} curl -L https://vercel.com/download/cli/linux -o /usr/local/bin/vercel && \
    chmod +x /usr/local/bin/vercel

# Install Netlify CLI
RUN curl -sL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    npm install -g netlify-cli

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements.txt

# Production image
FROM python:3.12-slim

# Create non-root user for security
RUN groupadd -r slackbot && useradd -r -g slackbot slackbot

# Install minimal runtime dependencies and CLI tools
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    git \
    wget \
    gnupg \
    nodejs \
    npm \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install CLI tools
RUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | tee /etc/apt/sources.list.d/github-cli.list > /dev/null && \
    apt-get update && apt-get install -y gh

# Install Fly CLI
RUN curl -L https://fly.io/install.sh | sh
ENV PATH="/root/.fly/bin:$PATH"

# Install Vercel and Netlify CLI
RUN npm install -g vercel netlify-cli

# Set working directory
WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /root/.local /home/slackbot/.local

# Copy application code
COPY --chown=slackbot:slackbot . .

# Create directories for logs and data
RUN mkdir -p /app/logs /app/data && \
    chown -R slackbot:slackbot /app

# Set environment variables
ENV PYTHONPATH=/home/slackbot/.local/lib/python3.12/site-packages:$PYTHONPATH
ENV PATH=/home/slackbot/.local/bin:$PATH
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PORT=8080
ENV METRICS_PORT=8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/metrics || exit 1

# Switch to non-root user
USER slackbot

# Expose ports
EXPOSE 8080 8000

# Default command
CMD ["python", "workspace_manager.py"]
