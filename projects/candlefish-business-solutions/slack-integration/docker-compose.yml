version: '3.8'

services:
  slack-admin-bot:
    build: .
    container_name: candlefish-slack-admin-bot
    restart: unless-stopped
    environment:
      - AWS_REGION=us-west-2
      - SLACK_SECRET_NAME=slack-admin-bot-tokens
      - LOG_LEVEL=INFO
      - METRICS_PORT=8000
    ports:
      - "8000:8000"  # Prometheus metrics
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ~/.aws:/home/slackbot/.aws:ro  # AWS credentials (read-only)
    networks:
      - slack-bot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for caching and rate limiting (optional)
  redis:
    image: redis:7-alpine
    container_name: slack-bot-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - slack-bot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Prometheus for metrics collection (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: slack-bot-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - slack-bot-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'

  # Grafana for metrics visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: slack-bot-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - slack-bot-network

networks:
  slack-bot-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data:
