[build]
  publish = "out/"
  command = "npm ci --include=dev && npm run export"

[build.environment]
  NODE_VERSION = "20"
  NPM_FLAGS = "--production=false"

# Functions configuration
[functions]
  node_bundler = "esbuild"

# Redirect rules for SPA routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

# API routes fallback (for serverless functions)
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

# Security headers with WebGL support
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self' 'unsafe-inline' 'unsafe-eval' https: data: blob:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https: blob:; font-src 'self' data: https:; connect-src 'self' https: wss: api.candlefish.ai; frame-src 'self' https:; worker-src 'self' blob:;"
    # WebGL and Canvas permissions
    Permissions-Policy = "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()"

# Cache static assets
[[headers]]
  for = "/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/_next/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# WebGL/Three.js specific assets
[[headers]]
  for = "*.glsl"
  [headers.values]
    Cache-Control = "public, max-age=31536000"
    Content-Type = "text/plain"

[[headers]]
  for = "*.wasm"
  [headers.values]
    Cache-Control = "public, max-age=31536000"
    Content-Type = "application/wasm"

# Environment-specific configurations
[context.production]
  environment = { NODE_ENV = "production" }
  command = "npm ci --include=dev && npm run export"

[context.deploy-preview]
  environment = { NODE_ENV = "development" }
  command = "npm ci --include=dev && npm run export"

[context.branch-deploy]
  environment = { NODE_ENV = "development" }
  command = "npm ci --include=dev && npm run export"
